#ITI#Scaffolding Computational Thinking Through Block Coding: A Learner Experience Design Study#FTI#
#IRE#Theorists and educators increasingly highlight the importance of computational thinking in STEM education. While various scaffolding strategies describe how to best support this skillset (i.e., paired programming, worked examples), less research has focused on the design and development of these digital tools. One way to support computational thinking and data science is through block coding and other ways that visualize the coding process. However, less is known about the learning experience design of these tools. Based on this gap, this work-in-progress study compared the learning experience design of novices and those with more advanced understanding of computational thinking. Results found differences emerge in the perceived dynamic interaction and scaffolding constructs of learning experience design. Implications for theory and practice are discussed. © The Author(s), under exclusive licence to Springer Nature B.V. 2022.#FRE#
#IPC#Computational thinking; Data science; Scaffolding; STEM#FPC#
#IRF#Alroobaea R., Mayhew P.J., How many participants are really enough for usability studies, ? 2014 Science and Information Conference, pp. 48-56, (2014); 
Anderson T., Shattuck J., Design-based research a decade of progress in education research?, Educational Researcher, 41, 1, pp. 16-25, (2012); 
Angeli C., Giannakos M., Computational thinking education: issues and challenges, Computers in Human Behavior, 105, (2020); 
Annetta L.A., Minogue J., Holmes S.Y., Cheng M.T., Investigating the impact of video games on high school students’ engagement and learning about genetics, Computers & Education, 53, 1, pp. 74-85, (2009); 
Armoni M., Meerbaum-Salant O., Ben-Ari M., From scratch to “real” programming, ACM Transactions in Computing Education, 14, 4, pp. 1-15, (2015); 
Bakki A., Oubahssi L., George S., Cherkaoui C., A model and tool to support pedagogical scenario building for connectivist MOOC, Technology Knowledge and Learning, 25, pp. 899-927, (2020); 
Barab S., Squire K., Design-based research: putting a stake in the ground, The Journal of the Learning Sciences, 13, 1, pp. 1-14, (2004); 
Bau D., Gray J., Kelleher C., Sheldon J., Turbak F., Learnable programming: blocks and beyond, Communications of the ACM, 60, 6, pp. 72-80, (2017); 
Boren T., Ramey J., Thinking aloud: reconciling theory and practice, IEEE Transactions on Professional Communication, 43, 3, pp. 261-278, (2000); 
Budiu R., Why 5 participants are okay in a qualitative study, but not in a quantitative one, Nielsen Norman Group, (2021); 
Carey K.L., Stefaniak J.E., An exploration of the utility of digital badging in higher education settings, Educational Technology Research and Development, 66, 5, pp. 1211-1229, (2018); 
Chang Y.K., Kuwata J., Learning experience design: Challenges for novice designers. In M. Schmidt, A. A. Tawfik, I. Jahnke, & Y, Earnshaw (Eds.), (2020); 
Chaturvedi D.K., Modeling and simulation of systems using MATLAB® and Simulink®, (2017); 
CSTA K-12 Computer Science, Computer Science Teachers Association, (2017); 
Deng W., Pi Z., Lei W., Zhou Q., Zhang W., Pencil Code improves learners’ computational thinking and computer learning attitude, Computer Applications in Engineering Education, 28, 1, pp. 90-104, (2020); 
desRivieres J., Wiegand J., Eclipse: a platform for integrating development tools, IBM Systems Journal, 43, 2, pp. 371-383, (2004); 
Du Boulay B., O'shea T., Monk J., The black box inside the glass box: presenting computing concepts to novices, International Journal of Human-Computer Studies, 51, 2, pp. 265-277, (1999); 
El-Masri M., Tarhini A., Factors affecting the adoption of e-learning systems in Qatar and USA: extending the Unified Theory of Acceptance and Use of Technology 2 (UTAUT2), Educational Technology Research and Development, 65, 3, pp. 743-763, (2017); 
Fagerlund J., Hakkinen P., Vesisenaho M., Viiri J., Computational thinking in programming with scratch in primary schools: a systematic review, Computer Applications in Engineering Education, 29, 1, pp. 12-28, (2021); 
Fan M., Lin J., Chung C., Truong K.N., Concurrent think-aloud verbalizations and usability oroblems, ACM Transactions on Computer-Human Interaction, 26, 5, pp. 1-35, (2019); 
Fan M., Shi S., Truong K.N., Practices and challenges of using think-aloud protocols in industry: an international survey, Journal of Usability Studies, 15, 2, pp. 85-102, (2020); 
Faulkner L., Beyond the five-user assumption: Benefits of increased sample sizes in usability testing. Behavior Research Methods, Instruments, & Computers: A Journal of the Psychonomic Society, Inc, 35, 3, pp. 379-383, (2003); 
Gray C., Paradigms of knowledge production in human-computer interaction: Towards a framing for learner experience (lx) design. In M. Schmidt, A. A. Tawfik, I. Jahnke, & Y, Earnshaw (Eds.), (2020); 
Hsu T.C., Chang S.C., Hung Y.T., How to learn and how to teach computational thinking: suggestions based on a review of the literature, Computers & Education, 126, pp. 296-310, (2018); 
Jahnke I., Schmidt M., Pham M., Singh K., Sociotechnical-pedagogical usability for designing and evaluating learner experience in technology-enhanced environments. In M. Schmidt, A. A. Tawfik, I. Jahnke, & Y, Earnshaw, (2020); 
Janssen J., Kirschner P.A., Applying collaborative cognitive load theory to computer-supported collaborative learning: towards a research agenda, Educational Technology Research and Development, 68, 2, pp. 783-805, (2020); 
K-12 Computer Science Framework, K-12 Computer Science Framework, (2016); 
Kalelioglu F., A new way of teaching programming skills to K-12 students: Code.org, Computers in Human Behavior, 52, pp. 200-210, (2015); 
Kim D., Jung E., Yoon M., Chang Y., Park S., Kim D., Demir F., Exploring the structural relationships between course design factors, learner commitment, self-directed learning, and intentions for further learning in a self-paced MOOC, Computers & Education, 166, (2021); 
Lemay D.J., Doleck T., Bazelais P., Context and technology use: Opportunities and challenges of the situated perspective in technology acceptance research: Context and technology use, British Journal of Educational Technology, 50, 5, pp. 2450-2465, (2019); 
Lewin C., Cranmer S., McNicol S., Developing digital pedagogy through learning design: an activity theory perspective, British Journal of Educational Technology, 49, 6, pp. 1131-1144, (2018); 
Li Y., Schoenfeld A.H., diSessa A.A., Graesser A.C., Benson L.C., English L.D., Duschl R.A., On computational thinking and STEM education, Journal for STEM Educ Res, 3, pp. 147-166, (2020); 
Lu J., Schmidt M., Lee M., Huang R., Usability Research in Educational Technology: A State-Of-The-Art Systematic Review, (2022); 
Moreno-Leon J., Robles G., Code to learn with Scratch? A systematic literature review, 2016 IEEE Global Engineering Education Conference (EDUCON), pp. 150-156, (2016); 
Report of a workshop on the scope and nature of computational thinking, National Research Council, (2010); 
Report of a workshop on the pedagogical aspects of computational thinking, National Research Council, (2011); 
Nielsen J., Why You Only Need to Test with 5 Users, (2000); 
Novak E., Daday J., McDaniel K., Assessing intrinsic and extraneous cognitive complexity of e-textbook learning, Interacting with Computers, 30, 2, pp. 150-161, (2018); 
Olney A.M., Fleming S.D., A Cognitive Load Perspective on the Design of Blocks Languages for Data Science. 2019 IEEE Blocks and Beyond Workshop, 95–97, (2019); 
Olney A.M., Fleming S.D., JupyterLab Extensions for Blocks Programming, Self-Explanations, and HTML Injection. In T. W. Price & S. San Pedro, Joint Proceedings of the Workshops at the 14th International Conference on Educational Data Mining, Vol. 3051, CSEDM–8. CEUR-WS.org., (2021); 
Oprean D., Balakrishnan B., From engagement to user experience: A theoretical perspective towards immersive learning.Learner and User Experience Research, (2020); 
Papert S., Mindstorms: Children, computers, and powerful ideas, Basic Books, (1980); 
Perera P., Tennakoon G., Ahangama S., Panditharathna R., Chathuranga B., A systematic mapping of Introductory Programming Languages for Novice Learners, Ieee Access : Practical Innovations, Open Solutions, 9, pp. 88121-88136, (2021); 
Perera P., Tennakoon G., Ahangama S., Panditharathna R., Chathuranga B., A Systematic Review of Introductory Programming Languages for Novice Learners, IEEE Access, (2021); 
Popat S., Starkey L., Learning to code or coding to learn? A systematic review, Computers & Education, 128, pp. 365-376, (2019); 
Powers J.G., Klemp J.B., Skamarock W.C., Davis C.A., Dudhia J., Gill D.O., Coen J.L., Gochis D.J., Ahmadov R., Peckham S.E., Grell G.A., Michalakes J., Trahan S., Benjamin S.G., Alexander C.R., Dimego G.J., Wang W., Schwartz C.S., Romine G.S., Duda M.G., The weather research and forecasting model: overview, system efforts, and future directions, Bulletin of the American Meteorological Society, 98, 8, pp. 1717-1737, (2017); 
Price T.W., Barnes T., Comparing textual and block interfaces in a novice programming environment, Proceedings of the Eleventh Annual International Conference on International Computing Education Research, pp. 91-99, (2015); 
Qian Y., Lehman J., Students’ misconceptions and other difficulties in introductory programming, ACM Transactions on Computing Education, 18, 1, pp. 1-24, (2017); 
Reinhart A., Evans C., Luby A., Orellana J., Meyer M., Wieczorek J., Elliott P., Burckhardt P., Nugent R., Think-aloud interviews: A tool for exploring student statistical reasoning, Journal of Statistics and Data Science Education, pp. 1-35, (2022); 
Resnick M., Maloney J., Monroy-Hernandez A., Rusk N., Eastmond E., Brennan K., Millner A., Rosenbaum E., Silver J., Silverman B., Kafai Y., Scratch: programming for all, Communications of the ACM, 52, 11, pp. 60-67, (2009); 
Rijo-Garcia S., Segredo E., Leon C., Computational thinking and user interfaces: A systematic review, IEEE Transactions on Education, pp. 1-10, (2022); 
Saez-Lopez J.M., del Olmo-Munoz J., Gonzalez-Calero J.A., Cozar-Gutierrez R., Exploring the effect of training in visual block programming for preservice teachers, Multimodal Technologies and Interaction, 4, 3, (2020); 
Shen H., Interactive notebooks: sharing the code, Nature, 515, 7525, pp. 151-152, (2014); 
Shute V.J., Sun C., Asbell-Clarke J., Demystifying computational thinking, Educational Research Review, 22, pp. 142-158, (2017); 
Soloway E., Learning to program = learning to construct mechanisms and explanations, Communications of the ACM, 29, 9, pp. 850-858, (1986); 
Tawfik A.A., Gatewood J., Gish-Lieberman J., Hampton A., Toward a definition of learning experience design, Technology Knowledge & Learning, 27, 1, pp. 309-334, (2022); 
Tedre M., Denning P.J., The long quest for computational thinking, Proceedings of the 16Th Koli Calling International Conference on Computing Education Research, pp. 120-129, (2016); 
Umapathy K., Ritzhaupt A.D., A meta-analysis of pair-programming in computer programming courses: implications for educational practice, ACM Trans Comput Educ, 17, 4, pp. 1-13, (2017); 
Vann S., Tawfik A.A., Flow theory and learning experience design in gamified learning environments, Learner and User Experience Research, (2020); 
). Integrating computational thinking in stem education: A literature review, . International Journal of Science and Mathematics Education, pp. 1-24, (2021); 
Wei H.C., Peng H., Chou C., Can more interactivity improve learning achievement in an online course? Effects of college students’ perception and actual use of a course-management system on their learning achievement, Computers & Education, 83, pp. 10-21, (2015); 
Weintrop D., Wilensky U., To block or not to block, that is the question: Students’ perceptions of blocks-based programming, Proceedings of the 14Th International Conference on Interaction Design and Children, pp. 199-208, (2015); 
Whitenton K., How to respond to skepticism of testing small groups of users, Nielsen Norman Group., (2019); 
Wijekumar K., Influence of emotions on digital learning, Educational Technology Research and Development, 69, pp. 55-57, (2021); 
Wing J., Research notebook: Computational thinking–what and why?, The Link: The Magazine of Carnegie Mellon University’s School of Computer Science, pp. 20-23, (2011); 
Xu Z., Ritzhaupt A.D., Tian F., Umapathy K., Block-based versus text-based programming environments on novice student learning outcomes: a meta-analysis study, Computer Science Education, 29, 2-3, pp. 177-204, (2019); 
Zhang L., Nouri J., A systematic review of learning computational thinking through scratch in K-9, Computers & Education, 141, pp. 1-25, (2019)#FRF#
