#ITI#Template-Based Generator for Single-Choice Questions#FTI#
#IRE#Manual composition of tasks and exams is a challenging and time-consuming task. Especially when exams are taken remotely without the personal monitoring by examiners, most exams can easily lose their integrity with the use of previously done exercises or student communication. This research introduces an approach that incorporates the principles of the generative software development and aspects of the feature-oriented product line engineering process into the field of question creation and generation. The resulting generator can be used to generate single-choice-question-families by means of written question templates. The generated questions within a question-family differ based on the set features and parameters and can be imported into the target learning management system ILIAS. Without much effort, examiners and educators can use the generator to create variants of their questions and deliver them to their students. © The Author(s) 2023.#FRE#
#IPC#Assessment; Feature-oriented-engineering; Generative-software-development; Multiple-choice; Question generation#FPC#
#IRF#Automated exam question generator using genetic algorithm, . in 2017 IEEE Conference on E-Learning, E-Management and E-Services (Ic3e), pp. 12-17, (2017); 
Apel S., Batory D., Kastner C., Saake G., Feature-oriented software product lines, (2013); 
Benavides D., Segura S., Ruiz-Cortes A., Automated analysis of feature models 20 years later: A literature review, Information Systems, 35, 6, pp. 615-636, (2010); 
Cruz P., Oliveira P., Seabra D., Exercise templates with Sage, Tbilisi Mathematical Journal, 5, 2, pp. 37-44, (2012); 
Czarnecki K., Overview of generative software development, International Workshop on Unconventional Programming Paradigms, pp. 326-341, (2004); 
Components and generative programming, In Software engineering—ESEC/FSE’99, pp. 2-19, (1999); 
Krathwohl D.R., A revision of Bloom's taxonomy: An overview, Theory into Practice, 41, 4, pp. 212-218, (2002); 
Kurdi G., Leo J., Parsia B., Sattler U., Al-Emari S., A systematic review of automatic question generation for educational purposes, International Journal of Artificial Intelligence in Education, 30, pp. 121-204, (2020); 
Martin F., Domain-specific languages, (2010); 
Metzger A., Pohl K., Software product line engineering and variability management: achievements and challenges, Future of Software Engineering Proceedings, (2014); 
Nagasaka K., Multiple-choice questions in mathematics: Automatic generation, revisited, In the 25Th Asian Technology Conference in Mathematics, Virtual Format, Radford University, Virginia, USA and Suan Sunandha Rajabhat University, Thailand., (2020); 
Comparison of automatic question generation techniques, In 2022 IEEE 22Nd International Symposium on Computational Intelligence and Informatics and 8Th IEEE International Conference on Recent Achievements in Mechatronics, Automation, Computer Science and Robotics (Cinti-Macro) (, pp. 000025-000030, (2022); 
Sood S.K., Rawat K.S., Fog-assisted virtual reality-based learning framework to control panic, Expert Systems, 39, 4, (2022); 
Thum T., Apel S., Kastner C., Schaefer I., Saake G., A classification and survey of analysis strategies for software product lines, ACM Computing Surveys (CSUR), 47, 1, pp. 1-45, (2014); 
Leaf: Multiple-choice question generation, In Advances in Information Retrieval: 44Th European Conference on IR Research, pp. 321-328, (2022); 
DiGen: Distractor generator for multiple choice questions in code comprehension, In 2021 IEEE International Conference on Engineering, Technology & Education (TALE), pp. 1073-1078, (2021); 
Zitko B., Stankov S., Rosic M., Grubisic A., Dynamic test generation over ontology-based knowledge representation in authoring shell, Expert Systems with Applications, 36, 4, pp. 8185-8196, (2009)#FRF#
