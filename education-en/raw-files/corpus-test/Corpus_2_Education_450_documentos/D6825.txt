#ITI#The WearableLearning Platform: A Computational Thinking Tool Supporting Game Design and Active Play#FTI#
#IRE#This emerging technology report introduces the WearableLearning (WL) platform as a tool to exercise computational thinking and STEM learning for 5-12th grade students through mobile technology-augmented active game play and game creation. Freely available at WearableLearning.org, it allows students and teachers to play, create, debug, and manage multiplayer, active games. To date, WearableLearning has been used in schools and afterschool programs by roughly 500 students and 25 teachers to create games covering STEM curricular content. WearableLearning enables the creation of physically active and social games, while offering possibilities for research on computational thinking, embodied cognition, collaborative learning, game-based learning, and practical applications of technology in STEM classrooms#FRE#
#IPC#Computational thinking; Educational games; Mobile technology-supported learning#FPC#
#IRF#Agbaji E., Improving Math Learning with Embodied Game-Based Mobile and Wearable Technologies (Unpublished Master's Thesis), (2019); 
Computing for STEM majors: Enhancing non CS majors' computing skills, In Proceedings of the 43Rd ACM Technical Symposium on Computer Science Education, pp. 457-462, (2012); 
Arroyo I., Micciollo M., Casano J., Ottmar E., Hulse T., Rodrigo M., Wearable learning: Multiplayer embodied games for math, In Proceedings of the Annual Symposium on Computer-Human Interaction in Play, pp. 205-216, (2017); 
Arroyo I., Castro F., Smith H., Harrison Closser A., Ottmar E., Augmenting Embodied Mathematics Classrooms with Mobile Tutors, Proceedings of the American Educational Research Association Annual Meeting, (2021); 
Castro F., Closser A.H., Smith G., Smith H., Rasul I., Arroyo I., Perez L.; 
Daily S.B., Leonard A.E., Jorg S., Babu S., Gundersen K., Parmar D., Embodying computational thinking: Initial design of an emerging technological learning tool, Technology, Knowledge and Learning, 20, 1, pp. 79-84, (2015); 
Ertmer P.A., Addressing first-and second-order barriers to change: Strategies for technology integration, Educational Technology Research and Development, 47, 4, pp. 47-61, (1999); 
Grover S., Pea R., Computational Thinking: A Competency Whose Time Has Come, Computer Science Education: Perspectives on Teaching and Learning in School, pp. 19-38, (2018); 
Harrison A., Hulse T., Manzo D., Micciolo M., Ottmar E., Arroyo I., Computational thinking through game creation in STEM classrooms, Proceedings (Part II) of the 19Th International Conference on Artificial Intelligence in Education, pp. 134-138, (2018); 
Hartmann W., Nievergelt J., Reichert R., Kara, finite state machines, and the case for programming as part of general education, Proceedings IEEE Symposia on Human-Centric Computing Languages and Environments, pp. 135-141, (2001); 
Hopcroft J.E., Ullman J.D., Introduction to Automata Theory, Languages, and Computation, (1979); 
Howard N.R., EdTech Leaders’ Beliefs: How are K-5 teachers supported with the integration of computer science in K-5 classrooms?, Technology, Knowledge, and Learning, 24, pp. 203-217, (2019); 
Howison M., Trninic D., Reinholz D., Abrahamson D., The Mathematical Imagery Trainer: From embodied interaction to conceptual learning, In Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, pp. 1989-1998, (2011); 
Johnson K., Pavleas J., Chang J., Kinecting to mathematics through embodied interactions, Computer, 46, 10, pp. 101-104, (2013); 
Kafai Y., Burke Q., Connected Code: Why Children Need to Learn Programming, (2014); 
Maloney J., Resnick M., Rusk N., Silverman B., Eastmond E., The Scratch Programming Language and Environment, ACM Transactions on Computing Education, 10, 4, (2010); 
Margolis J., Stuck in the Shallow End: Education, (2008); 
Micciolo M., Designing a visual programming language for the creation of multiplayer embodied games (Unpublished, (2018); 
Roman-Gonzalez M., Computational Thinking Test: Design Guidelines and Content Validation, Proceedings of the EDULEARN15 Conference, (2015); 
Schulte C., Hornung M., Sentance S., Dagiene V., Jevsikova T., Computer science at school/CS teacher education: Koli working-group report on CS at school, In Proceedings of the 12Th Koli Calling International Conference on Computing Education Research, pp. 29-38, (2012); 
Smith M., (2016); 
Smith H., Closser A.H., Ottmar E., Arroyo I., Developing math knowledge and computational thinking through game play and design: A professional development program, Contemporary Issues in Technology and Teacher Education, 20, 4, pp. 660-686, (2020); 
Sung W., Ahn J., Black J.B., Introducing computational thinking to young learners: Practicing computational perspectives through embodiment in mathematics education, Technology, Knowledge and Learning, 22, 3, pp. 443-463, (2017); 
Tsai C.C., Chai C.S., The "third"-order barrier for technology-integration instruction: Implications for teacher education, Australasian Journal of Educational Technology, 28, pp. 1057-1060, (2012); 
Weintrop D., Beheshti E., Horn M., Orton K., Jona K., Trouille L., Wilenski U., Defining computational thinking for mathematics and science classrooms, Journal of Science Education and Technology, 25, pp. 127-147, (2016); 
Wing J., (2014); 
Yildiz Durak H., The effects of using different tools in programming teaching of secondary school students on engagement, computational thinking and reflective thinking skills for problem solving, Technology, Knowledge, and Learning, 25, pp. 179-195, (2020)#FRF#
