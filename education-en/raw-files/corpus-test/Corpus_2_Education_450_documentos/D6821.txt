#ITI#A Comparison of Plugged and Unplugged Tools in Teaching Algorithms at the K-12 Level for Computational Thinking Skills#FTI#
#IRE#This study examines the effects of plugged and unplugged programming tools used in algorithm teaching at the K-12 level on student computational thinking skills and to determine whether gender is a factor in this process. The study group was designed with a control group pre-test–post-test; quasi-experimental model, that consisted of 109 students in 6th grade at a secondary school. 3 of 4 branches in the school were randomly selected and the experiment and control groups were determined by random assignment. During the study, experiment group 1 was taught Code.org while experiment group 2 was taught unplugged tools, and the control group was taught Scratch. The study lasted for 6 weeks and had 2 lessons per week. The data collection tool used was the "Computational Thinking Levels Scale" as the pre- and post-tests. Our findings showed that while the group that was taught unplugged activities showed positive development for computational thinking skills, there were no significant improvements observed in the other groups. Also, when comparing computational thinking skills, again, there was no significant difference found among the groups. It was observed that group and gender cofactors did not create significant variation among the groups; and when examined on a group basis, differences were found to favor male students when they were performing unplugged activities#FRE#
#IPC#Algorithm; Block-based programming; Computational thinking; Unplugged activities#FPC#
#IRF#Alamer R.A., Al-Doweesh W.A., Al-Khalifa H.S., Al-Razgan M.S., Programming Unplugged: Bridging CS Unplugged Activities Gap for Learning Key Programming Concepts, In Proceedings of the Fifth International Conference on E-Learning, Bahrain, pp. 97-103, (2015); 
Al-Jarrah A., Collaborative Virtual Environments for Introductory Programming (CVEIP), (2016); 
Apostolellis P., Stewart M., Frisina C., Kafura D., RaBit EscAPE: A game board for computational thinking, In Proceedings of the 2014 Conference on Interaction Design and Children, Denmark, pp. 349-352, (2014); 
Ar N.A., Unplugged Coding Game, Tospaa., (2017); 
Armoni M., Meerbaum-Salant O., Ben-Ari M., From scratch to “real” programming, ACM Transactions on Computing Education (TOCE), 14, 4, pp. 1-15, (2015); 
Atmatzidou S., Demetriadis S., Advancing students’ computational thinking skills through educational robotics: A study on age and gender relevant differences, Robotics and Autonomous Systems, 75, pp. 661-670, (2016); 
Baz F.C., A comparative analysis of coding software for children, Current Research in Education, 4, 1, pp. 36-47, (2018); 
Bebras International Informatics and Computational Thinking Event., (2014); 
Bell T., Rosamond F., Casey N., Computer Science Unplugged and Related Projects in Math and Computer Science Popularization, The Multivariate Algorithmic Revolution and Beyond: Essays Dedicated to Michael R. Fellows on the Occasion of His 60Th Birthday, pp. 398-456, (2012); 
Bell T., Witten I.H., Fellows M., (2015); 
Brackmann C.P., Roman-Gonzalez M., Robles G., Moreno-Leon J., Casali A., Barone D., Development of computational thinking skills through unplugged activities in primary school, In Proceedings of the 12Th Workshop on Primary and Secondary Computing Education, Netherlands, pp. 65-72, (2017); 
Brennan K., Resnick M., (2012); 
Bundy A., Computational thinking is pervasive, Journal of Scientific and Practical Computing, 1, 2, pp. 67-69, (2007); 
Calder N., Using scratch: An integrated problem-solving approach to mathematical thinking, Australian Primary Mathematics Classroom, 15, 4, pp. 9-14, (2010); 
Cetin I., Ucar Z.U., Bilgi İşlemsel Düşünmenin Tanımı ve Kapsamı [Computational Thinking Definition and Scope], From Computational Thinking to Programming, pp. 41-78, (2018); 
Anybody can learn., (2013); 
Giving women the fair advantage – Code First Girls, (2019); 
Code for Girls., (2018); 
Computer Science for Fun., (2017); 
Operational definition of computational thinking for K-12 education. Resource document., (2014); 
Principles., (2019); 
Dagiene V., Bebras, International Challenge on Informatics and Computational Thinking, (2003); 
Du J., Wimmer H., Rada R., Hour of Code”: Can it change students’ attitudes toward programming?, Journal of Information Technology Education: Innovations in Practice, 15, pp. 52-73, (2016); 
Durak H.Y., The effects of using different tools in programming teaching of secondary school students on engagement, computational thinking and reflective thinking skills for problem solving, Techology, Knowledge and Learning, 25, 1, pp. 179-195, (2020); 
Elkin M., Sullivan A., Bers M.U., Programming with the KIBO robotics kit in preschool classrooms, Computers in the Schools, 33, 3, pp. 169-186, (2016); 
Erdem E., The Investigation of Different Teaching Strategies during Teaching Programming Process in Block Based Environment in Terms of Different Factors, (2018); 
I discover coding., (2018); 
Faber H.H., Wierdsma M.D., Doornbos R.P., van der Ven J.S., de Vette K., Teaching computational thinking to primary school students via unplugged programming lessons, Journal of the European Teacher Education Network, 12, pp. 13-24, (2017); 
Fadjo C.L., Developing computational thinking through grounded embodied cognition (Publication No. 3506300) [Doctoral Dissertation, Columbia University], Proquest Dissertations & Theses Global, (2012); 
Ferrer-Mico T., Prats-Fernandez M.A., Redo-Sanchez A., Impact of scratch programming on students’ understanding of their own learning process, Procedia-Social and Behavioral Sciences, 46, pp. 1219-1223, (2012); 
Fessakis G., Gouli E., Mavroudi E., Problem solving by 5–6 years old kindergarten children in a computer programming environment: A case study, Computers & Education, 63, pp. 87-97, (2013); 
Fisher D., Transition from Scratch to Python with Future Learn, (2018); 
Franklin D., Conrad P., Aldana G., Hough S., Animal tlatoque: Attracting middle school students to computing through culturally-relevant themes, Proceedings of the 42Nd ACM Technical Symposium on Computer Science Education, USA, pp. 453-458, (2011); 
Genc Z., Karakus S., Learning through design: Using scratch in instructional computer games design, Proceedings of the 5Th International Computer & Instructional Technologies Symposium (ICITS), Turkey, pp. 981-987, (2011); 
Giordano D., Maiorana F., Teaching algorithms: Visual language vs flowchart vs textual language, Proceedings of the 2015 IEEE Global Engineering Education Conference (EDUCON), Estonia, pp. 499-504, (2015); 
Go Code Girls – Ontario Network of Woman in Engineering., (2020); 
Gomes A., Mendes A.J., Learning to program-difficulties and solutions, Proceedings of the International Conference on Engineering Education (ICEE), Portugal, pp. 283-287, (2007); 
Exploring Computational Thinking., (2018); 
Grover S., Pea R., Computational thinking in K-12: A review of the state of the field, Educational Researcher, 42, 1, pp. 38-43, (2013); 
Gunbatar M.S., Karalar H., Gender differences in middle school students’ attitudes and self-efficacy perceptions towards mBlock programming, European Journal of Educational Research, 7, 4, pp. 925-933, (2018); 
Haddad R.J., Kalaani Y., Can computational thinking predict academic performance?, Proceedings of 2015 IEEE Integrated STEM Education Conference, USA, pp. 225-229, (2015); 
Hermans F., Aivaloglou E., To Scratch or not to Scratch?: A controlled experiment comparing plugged first and unplugged first programming lessons, Proceedings of the 12Th Workshop on Primary and Secondary Computing Education, pp. 49-56, (2017); 
Howland K., Good J., Learning to communicate computationally with Flip: A bi-modal programming language for game creation, Computers & Education, 80, pp. 224-240, (2015); 
Hsu T.-C., Chang S.-C., Hung Y.-T., How to learn and how to teach computational thinking: Suggestions based on a review of the literature, Computers & Education, 126, pp. 296-310, (2018); 
Kalelioglu F., A new way of teaching programming skills to K-12 students: Code.org, Computers in Human Behavior, 52, pp. 200-210, (2015); 
Kalelioglu F., Gulbahar Y., The effects of teaching programming via Scratch on problem solving skills: A discussion from learners’ perspective, Informatics in Education, 13, 1, pp. 33-50, (2014); 
Kalelioglu F., Bilgi İşlemsel Düşünmenin Tanımı ve Kapsamı [Computational Thinking Definition and Scope], From Computational Thinking to Programming, pp. 183-204, (2017); 
Karacam N.F., Yildiz M., Pece S.B., Coding Pirates, (2018); 
Kaucic B., Asic T., Improving introductory programming with Scratch?, In Proceedings of the 34Th International Convention MIPRO, Croatia, pp. 1095-1100, (2011); 
Kirmit S., Donmez I., Cataltas H.E., The study of gifted students’ computational thinking skills, Journal of STEAM Education, 1, 2, pp. 17-26, (2018); 
Ko A., Myers B., Aung H.H., Six learning barriers in end-user programming systems, In Proceedings of 2004 IEEE Symposium on Visual Languages-Human Centric Computing, Italy, pp. 199-206, (2004); 
Kobsiripat W., Effects of the media to promote the scratch programming capabilities creativity of elementary school students, Procedia-Social and Behavioral Sciences, 174, pp. 227-232, (2015); 
Korkmaz O., Cakir R., Ozden M.Y., Computational Thinking Levels Scale (CTLS) adaptation for secondary school level, Gazi Journal of Education Sciences, 1, 2, pp. 67-86, (2015); 
Korkmaz O., Cakir R., Ozden M.Y., Oluk A., Sarioglu S., Investigation of individuals’ computational thinking skills in terms of different variables, Ondokuz Mayis University Journal of Faculty of Education, 34, 2, pp. 68-87, (2015); 
Kukul V., Karatas S., Computer Science Education without Using Computer: Views of Pre-service Teachers [Conference presentation abstract], 10Th International Computer and Instructional Technologies Symposium (ICITS), Rize, Turkey, (2016); 
Lambic D., Doric B., Ivakic S., Investigating the effect of the use of code.Org on younger elementary school students’ attitudes towards programming, Behaviour & Information Technology, pp. 1-12, (2020); 
Lee T.Y., Mauriello M.L., Ahn J., Bederson B.B., CTArcade: Computational thinking with games in school age children, International Journal of Child-Computer Interaction, 2, 1, pp. 26-33, (2014); 
Maloney J.H., Peppler K., Kafai Y., Resnick M., Rusk N., Programming by choice: Urban youth learning programming with scratch, ACM SIGCSE Bulletin, 40, 1, pp. 367-371, (2008); 
Mihci C., Ozdener Donmez N., Teaching GUI-programming concepts to prospective K12 ICT teachers: MIT App inventor as an alternative to text-based languages, International Journal of Research in Education and Science, 3, 2, pp. 543-559, (2017); 
6th Grade Information Technologies and Software Course Teacher's Guide, (2017); 
Information Technologies and Software Curriculum, (2018); 
Mumcu H.Y., Yildiz S., The investigation of algorithmic thinking skills of 5th and 6th graders according to different variables, MATDER Mathematics Education Journal, 3, 2, pp. 18-26, (2018); 
Nam D., Kim Y., Lee T., The effects of Scaffolding-based courseware for the scratch programming learning on student problem solving skill, In Proceedings of the 18Th International Conference on Computers in Education, Malaysia, pp. 723-727, (2010); 
Nikou S.A., Economides A.A., Measuring Student Motivation during “The Hour of Code TM” Activities, In Proceedings of 2014 IEEE 14Th International Conference on Advanced Learning Technologies, USA, pp. 744-745, (2014); 
Oluk A., Cakir R., Investigating University Students’ computational thinking skills in terms of logical mathematical intelligence problem solving skills, Journal of Theoretical Educational Science, 12, 2, pp. 457-473, (2019); 
Oluk A., Korkmaz O., Oluk H., Effect of scratch on 5th Graders’ algorithm development and computational thinking skills, Turkish Journal of Computer and Mathematics Education (TURCOMAT), 9, 1, pp. 54-71, (2018); 
Oluk A., Korkmaz O., Comparing students’ scratch skills with their computational thinking skills in terms of different variables, I.J. Modern Education and Computer Science, 8, 11, pp. 1-7, (2016); 
Ozdener N., A comparison of the misconceptions about the time-efficiency of algorithm by various profiles of computer programming students, Computer & Education, 51, 3, pp. 1094-1102, (2008); 
Ozoran D., Cagiltay N., Topalli D., Using scratch in introduction to programming course for engineering students, In Proceedings of the 2Nd International Engineering Education Conference (IEEC2012), Antalya, pp. 125-132, (2012); 
Papavlasopoulou S., Giannakos M.N., Jaccheri L., Creative programming experiences for teenagers: Attitudes, performance and gender differences, In Proceedings of the 15Th International Conference on Interaction Design and Children, UK, pp. 565-570, (2016); 
Pinto A., Escudeiro P., The use of Scratch for the development of 21st century learning skills in ICT, Proceedings of the 2014 9Th Iberian Conference on Information Systems and Technologies (CISTI), Spain, pp. 1-4, (2014); 
Resnick M., Maloney J., Monroy-Hernandez A., Rusk N., Eastmond E., Brennan K., Millner A., Rosenbaum E., Silver J., Silverman B., Kafai Y.B., Scratch: Programming for all, Communication of the ACM, 52, 11, pp. 60-67, (2009); 
Rodriguez B., Kennicutt S., Rader C., Camp T., Assessing computational thinking in CS unplugged activities, In Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education, USA, pp. 501-506, (2017); 
Roman-Gonzalez M., Perez-Gonzalez J.C., Jimenez-Fernandez C., Which cognitive abilities underlie computational thinking? Criterion validity of the computational thinking test, Computers in Human Behavior, 72, pp. 678-691, (2017); 
Saritepeci M., Analysis of computational thinking skill level in secondary education in terms of various variables, In Proceedings of the 5Th International Instructional Technologies & Teacher Education Symposium (ITTES), Izmir, pp. 218-226, (2017); 
Computational thinking: The developing definition. In, Proceedings of the 18Th Annual Conference on Innovation and Technology in Computer Science Education, England., (2013); 
Soykan F., Kanbul S., Analysing K12 students’ self-efficacy regarding coding education, TEM Journal, 7, 1, (2018); 
Stolee K.T., Fristoe T., Expressing computer science concepts through Kodu game lab, In Proceedings of the 42Nd ACM Technical Symposium on Computer Science Education, USA, pp. 99-104, (2011); 
Sullivan A., Bers M.U., Girls, boys, and bots: Gender differences in young children’s performance on robotics and programming tasks, Journal of Information Technology Education: Innovations in Practice, 15, pp. 145-165, (2016); 
Uslu N.A., Mumcu F., Egin F., The effect of visual programming activities on secondary school students’ computational thinking skills, Journal of Ege Education Technologies, 2, 1, pp. 19-31, (2018); 
Vinayakumar R., Soman K.P., Menon P., Alg-design: Facilitates to learn algorithmic thinking for beginners, In Proceedings of the 2018 9Th International Conference on Computing, Communication and Networking Technologies (ICCCNT), India, pp. 1-6, (2018); 
Weintrop D., Wilensky U., To block or not to block, that is the question: Students’ perceptions of blocks-based programming, In Proceedings of the 14Th International Conference on Interaction Design and Children, USA, pp. 199-208, (2015); 
Weintrop D., Wilensky U., Comparing block-based and text-based programming in high school computer science classrooms, ACM Transactions on Computing Education (TOCE), 18, 1, pp. 1-25, (2017); 
Weintrop D., Minding the gap between blocks-based and text-based programming, Proceedings of the 46Th ACM Technical Symposium on Computer Science Education, USA, (2015); 
Wing J.M., Computational thinking, Communications of the ACM, 49, 3, pp. 33-35, (2006); 
Wu S.Y., The development and challenges of computational thinking board games, Proceedings of the 2018 1St International Cognitive Cities Conference (IC3), pp. 129-131, (2018); 
Yagci M., A study on computational thinking and high school students’ computational thinking skill levels, International Online Journal of Educational Sciences, 10, 2, pp. 81-96, (2018); 
Yunkul E., Durak G., Cankaya S., Misirli Z., The effects of scratch software on students’ computational thinking skills, Necatibey Faculty of Education Electronic Journal of Science and Mathematics Education, 11, 2, pp. 502-517, (2017); 
Zeeman M., To scratch or not to scratch-a reflection, Proceedings of the International Conference on E-Learning, pp. 425-434, (2013)#FRF#
