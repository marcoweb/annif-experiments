#ITI#Automated assessment system for programming courses: a case study for teaching data structures and algorithms#FTI#
#IRE# An important course in the computer science discipline is ‘Data Structures and Algorithms’ (DSA). The coursework lays emphasis on experiential learning for building students’ programming and algorithmic reasoning abilities. Teachers set up a repertoire of formative programming exercises to engage students with different programmatic scenarios to build their know-what, know-how and know-why competencies. Automated assessment tools can assist teachers in inspecting, marking, and grading of programming exercises and also support them in providing students with formative feedback in real-time. This article describes the design of a bespoke automarker that was integrated into the DSA coursework and therefore served as an instructional tool. Activity theory has provided the pedagogical lens to examine how the automarker-mediated instructional strategy enabled self-reflection and assisted students in their formative learning journey. Learner experiences gathered from 39 students enrolled in DSA course shows that the automarker facilitated practice-based learning to advance students know-what, know-why and know-how skills. This study contributes to both curricula and pedagogic practice by showcasing the integration of an automated assessment strategy with programming-related coursework to inform future teaching and assessment practice#FRE#
#IPC# Activity theory; Automated assessment; Formative learning; Pedagogy; Practice-driven learning; Programming#FPC#
#IRF# Adam I.O., Effah J., Boateng R., Activity theory analysis of the virtualisation of teaching and teaching environment in a developing country university, Education and Information Technologies, 24, 1, pp. 251-276, (2019); 
Amelung M., Krieger K., Rosner D., E-Assessment as a service, IEEE Transactions on Learning Technologies, 4, 2, pp. 162-174, (2011); 
Barra E., Lopez-Pernas S., Alonso A., Sanchez-Rada J.F., Gordillo A., Quemada J., Automated assessment in programming courses: A case study during the COVID-19 Era, Sustainability, (2020); 
Basharina O.K., An activity theory perspective on student-reported contradictions in international telecollaboration, Language Learning & Technology, 11, 2, pp. 82-103, (2007); 
Belhaoues T., Bensebaa T., Abdessemed M., Bey A., AlgoSkills: an ontology of Algorithmic Skills for exercises description and organization, Journal of e-Learning and Knowledge Society, 12, 1, pp. 1826-6223, (2016); 
Bey A., Jermann P., Dillenbourg P., A comparison between two automatic assessment approaches for programming an empirical study on MOOCs, Journal of Educational Technology & Society, 21, 2, pp. 259-272, (2018); 
Computing Curricula Report 2020 (ISBN: 978–1–4503–9059–0), (2021); 
Daniels H., Activity theory, discourse and Bernstein, Educational Review, 56, 2, pp. 121-132, (2004); 
Daradoumis T., MarquesPuig J.M., Arguedas M., CalvetLinan L., Analyzing students' perceptions to improve the design of an automated assessment tool in online distributed programming, Computers & Education, 128, pp. 159-170, (2019); 
Davis M., Computability & unsolvability, (1958); 
Engestrom Y., Perspectives on activity theory, pp. 19-38, (1999); 
Garcia-Mateos G., Fernandez-Aleman J.L., A course on algorithms and data structures using on-line judging, Paper Presented at the Proceedings of the 14Th Annual ACM SIGCSE Conference on Innovation and Technology in Computer Science Education, (2009); 
Gordillo A., Effect of an instructor-centered tool for automatic assessment of programming assignments on students’ perceptions and performance, Sustainability, (2019); 
Insa D., Silva J., Automatic assessment of Java code, Computer Languages, Systems & Structures, 53, pp. 59-72, (2018); 
Lemay D.J., Basnet R.B., Doleck T., Bazelais P., Saxena A., Instructional interventions for computational thinking: Examining the link between computational thinking and academic performance, Computers and Education Open, 2, (2021); 
Introductory programming: A systematic literature review. Paper presented at the Proceedings Companion of the 23rd Annual ACM Conference on Innovation and Technology in Computer Science Education, Larnaca, Cyprus, (2018); 
Manzoor H., Naik A., Shaffer C.A., North C., Edwards S.H., Auto-Grading Jupyter Notebooks, Paper Presented at the Proceedings of the 51St ACM Technical Symposium on Computer Science Education, (2020); 
Mathrani S., Mathrani A., Khatun M., Exogenous and endogenous knowledge structures in dual-mode course deliveries, Computers and Education Open, 1, (2020); 
Medeiros R.P., Ramalho G.L., Falcao T.P., A Systematic literature review on teaching and learning introductory programming in higher education, IEEE Transactions on Education, 62, 2, pp. 77-90, (2019); 
Murphy E., Rodriguez-Manzanares M.A., Using activity theory and its principle of contradictions to guide research in educational technology, Australasian Journal of Educational Technology, (2008); 
Park Y., Jo I.-H., Using log variables in a learning management system to evaluate learning activity using the lens of activity theory, Assessment & Evaluation in Higher Education, 42, 4, pp. 531-547, (2017); 
Parsons D., Susnjak T., Mathrani A., Design from detail: Analyzing data from a global day of coderetreat, Information and Software Technology, 75, pp. 39-55, (2016); 
Restrepo-Calle F., RamirezEcheverry J.J., Gonzalez F.A., Continuous assessment in a computer programming course supported by a software tool, Computer Applications in Engineering Education, 27, 1, pp. 80-89, (2019); 
Richey R.C., Klein J.D., Nelson W.A., Developmental Research: Studies of Instructional Design and Development, Handbook of research on educational communications and technology, pp. 1099-1130, (2004); 
Rubio-Sanchez M., Kinnunen P., Pareja-Flores C., Velazquez-Iturbide J.A., Lessons learned from using the automated assessment tool “Mooshak”, Paper Presented at the 2012 International Symposium on Computers in Education (SIIE), (2012); 
Skalka J., Drlik M., Automated Assessment and Microlearning Units as Predictors of At-Risk Students and Students’ Outcomes in the Introductory Programming Courses, Applied Sciences, (2020); 
Soll M., Johannsen M., Biemann C., Enhancing a Theory-Focused Course Through the Introduction of Automatically Assessed Programming Exercises – Lessons Learned, (2021); 
Souza D.M.D., Felizardo K.R., Barbosa E.F., A Systematic Literature Review of Assessment Tools for Programming Assignments, 2016 IEEE 29Th International Conference on Software Engineering Education and Training (CSEET) (Pp, pp. 147-156, (2016); 
Using the Gnu Compiler Collection: A Gnu Manual for Gcc Version 4.3.3, (2009); 
Towards practical programming exercises and automated assessment in Massive Open Online Courses, Paper Presented at the 2015 IEEE International Conference on Teaching, (2015); 
Su S., Zhang E., Denny P., Giacaman N., A Game-Based Approach for Teaching Algorithms and Data Structures using Visualizations, Paper Presented at the Proceedings of the 52Nd ACM Technical Symposium on Computer Science Education, (2021); 
Tong A., Sainsbury P., Craig J., Consolidated criteria for reporting qualitative research (COREQ): A 32-item checklist for interviews and focus groups, International Journal for Quality in Health Care, 19, 6, pp. 349-357, (2007); 
Twining P., Heller R.S., Nussbaum M., Tsai C.-C., Some guidance on conducting and reporting qualitative studies, Computers & Education, 106, pp. A1-A9, (2017); 
Ullah Z., Lajis A., Jamjoom M., Altalhi A., Al-Ghamdi A., Saleem F., The effect of automatic assessment on novice programming: Strengths and limitations of existing systems, Computer Applications in Engineering Education, 26, 6, pp. 2328-2341, (2018); 
Watson C., Li F.W.B., Failure rates in introductory programming revisited, Paper Presented at the Proceedings of the 2014 Conference on Innovation & Technology in Computer Science Education, (2014); 
Zvacek S.M., From know-how to know-why: Lab-created learning, Paper Presented at the 2015 3Rd Experiment International Conference (Exp.At'15), (2015)#FRF#
