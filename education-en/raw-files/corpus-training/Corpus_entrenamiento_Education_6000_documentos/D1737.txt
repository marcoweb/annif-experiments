#ITI#Supporting skill integration in an intelligent tutoring system for code tracing#FTI#
#IRE# Background: Skill integration is vital in students' mastery development and is especially prominent in developing code tracing skills which are foundational to programming, an increasingly important area in the current STEM education. However, instructional design to support skill integration in learning technologies has been limited. Objectives: The current work presents the development and empirical evaluation of instructional design targeting students' difficulties in code tracing particularly in integrating component skills in the Trace Table Tutor (T3), an intelligent tutoring system. Methods: Beyond the instructional features of active learning, step-level support, and individualized problem selection of intelligent tutoring systems (ITS), the instructional design of T3 (e.g., hints, problem types, problem selection) was optimized to target skill integration based on a domain model where integrative skills were represented as combinations of component skills. We conducted an experimental study in a university-level introductory Python programming course and obtained three findings. Results and Conclusions: First, the instructional features of the ITS technology support effective learning of code tracing, as evidenced by significant learning gains (medium-to-large effect sizes). Second, performance data supports the existence of integrative skills beyond component skills. Third, an instructional design focused on integrative skills yields learning benefits beyond a design without such focus, such as improving performance efficiency (medium-to-large effect sizes). Major Takeaways: Our work demonstrates the value of designing for skill integration in learning technologies and the effectiveness of the ITS technology for computing education, as well as provides general implications for designing learning technologies to foster robust learning#FRE#
#IPC# adaptive educational systems; computer science education; domain modelling; instructional design; intelligent tutoring systems; programming education#FPC#
#IRF# Akram B., Azizolsoltani H., Min W., Wiebe E.N., Navied A., Mott B.W., Boyer K.E., Lester J.C., A data-driven approach to automatically assessing concept-level CS competencies based on student programs, Proceedings of the CSEDM Workshop at the 13th International Conference on Educational Data Mining, (2020); 
Aleven V., McLaren B.M., Sewall J., van Velsen M., Popescu O., Demi S., Ringenberg M., Koedinger K.R., Example-tracing tutors: Intelligent tutor development for non-programmers, International Journal of Artificial Intelligence in Education, 26, 1, pp. 224-269, (2016); 
Aleven V., McLaughlin E.A., Glenn R.A., Koedinger K.R., Instruction based on adaptive learning technologies. In R. E. Mayer & P. Alexander (Eds.), Handbook of research on learning and instruction, pp. 522-560, (2016); 
Alibali M.W., Stephens A.C., Brown A.N., Kao Y.S., Nathan M.J., Middle school students' conceptual understanding of equations: Evidence from writing story problems, International Journal of Educational Psychology, 3, 3, pp. 235-264, (2014); 
Ambrose S.A., Bridges M.W., DiPietro M., Lovett M.C., Norman M.K., How learning works: Seven research-based principles for smart teaching, (2010); 
Anderson J.R., Conrad F.G., Corbett A.T., Skill acquisition and the LISP tutor, Cognitive Science, 13, 4, pp. 467-505, (1989); 
Berges M., Hubwieser P., Evaluation of source code with item response theory, Proceedings of the 2015 ACM Conference on Innovation and Technology in Computer Science Education, pp. 51-56, (2015); 
Brusilovsky P., Intelligent tutor, environment and manual for introductory programming, Educational and Training Technology International, 29, 1, pp. 26-34, (1992); 
Cisar S.M., Pinter R., Radosav D., Effectiveness of program visualization in learning java: A case study with Jeliot 3, International Journal of Computers Communications & Control, 6, 4, pp. 668-680, (2011); 
Clancy M.J., Linn M.C., Patterns and pedagogy, Proceedings of the Thirtieth SIGCSE Technical Symposium on Computer Science Education, pp. 37-42, (1999); 
Corbett A.T., Anderson J.R., Knowledge tracing: Modeling the acquisition of procedural knowledge, User Modeling and User-Adapted Interaction, 4, 4, pp. 253-278, (1994); 
De Boeck P., Wilson M., Explanatory item response models: A generalized linear and nonlinear approach, 10, pp. 978-971, (2004); 
de Raadt M., Teaching programming strategies explicitly to novice programmers, (2008); 
Denny P., Luxton-Reilly A., Simon B., Evaluating a new exam question: Parsons problems, Proceedings of the Fourth International Workshop on Computing Education Research, pp. 113-124, (2008); 
du Boulay B., Some difficulties of learning to program, Journal of Educational Computing Research, 2, 1, pp. 57-73, (1986); 
Ericsson K.A., The influence of experience and deliberate practice on the development of superior expert performance, The Cambridge handbook of expertise and expert performance, 38, pp. 685-705, (2006); 
Frederiksen J.R., White B.Y., An approach to training based upon principled task decomposition, Acta Psychologica, 71, 1-3, pp. 89-146, (1989); 
Goldberg M.H., How often does random assignment fail? Estimates and recommendations, Journal of Environmental Psychology, 66, (2019); 
Goldin I.M., Koedinger K.R., Aleven V., Learner differences in hint processing, Proceedings of the 5th International Conference on Educational Data Mining, pp. 73-80, (2012); 
Gonzalez-Brenes J.P., Huang Y., Brusilovsky P., General features in knowledge tracing: Applications to multiple subskills, temporal item response theory, and expert knowledge, Proceedings of the 7th International Conference on Educational Data Mining, pp. 84-91, (2014); 
Guzdial M., Learner-centered design of computing education: Research on computing for everyone, Synthesis Lectures on Human-Centered Informatics, 8, 6, pp. 1-165, (2015); 
Heffernan N.T., Koedinger K.R., The composition effect in symbolizing: The role of symbol production vs. text comprehension, Proc. 19th Annual Conf. Cognitive Science Society, pp. 307-312, (1997); 
Hertz M., Jump M., Trace-based teaching in early programming courses, Proceedings of the 44th ACM Technical Symposium on Computer Science Education, pp. 561-566, (2013); 
Hooshyar D., Ahmad R.B., Yousefi M., Yusop F.D., Horng S.J., A flowchart-based intelligent tutoring system for improving problem-solving skills of novice programmers, Journal of Computer Assisted Learning, 31, 4, pp. 345-361, (2015); 
Hoppner F., Measuring instruction comprehension by mining memory traces for early formative feedback in Java courses, Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education, pp. 105-111, (2019); 
Horstmann C.S., Big Java: Early objects, (2020); 
Hosseini R., Brusilovsky P., Javaparser: A fine-grain concept indexing tool for java problems, CEUR Workshop Proceedings, 1009, pp. 60-63, (2013); 
Hsiao I.H., Sosnovsky S., Brusilovsky P., Guiding students to the right questions: Adaptive navigation support in an E-learning system for Java programming, Journal of Computer Assisted Learning, 26, 4, pp. 270-283, (2010); 
(2018). Learner modeling for integration skills in programming (Doctoral dissertation). University of Pittsburgh.; 
Huang Y., Gonzalez-Brenes J.P., Brusilovsky P., Challenges of using observational data to determine the importance of example usage, International Conference on Artificial Intelligence in Education, pp. 633-637, (2015); 
Huang Y., Guerra-Hollstein J., Barria-Pineda J., Brusilovsky P., Learner modeling for integration skills, Proceedings of the 25th Conference on User Modeling, Adaptation and Personalization, pp. 85-93, (2017); 
Huang Y., Lobczowski N.G., Richey J.E., McLaughlin E.A., Asher M.W., Harackiewicz J.M., Aleven V., Koedinger K.R., A general multi-method approach to data-driven redesign of tutoring systems, Proceedings of the 11th International Conference on Learning Analytics and Knowledge, pp. 161-172, (2021); 
Ihantola P., Ahoniemi T., Karavirta V., Seppala O., Review of recent systems for automatic assessment of programming assignments, Proceedings of the 10th Koli Calling International Conference on Computing Education Research, pp. 86-93, (2010); 
Jennings J., Muldner K., When does scaffolding provide too much assistance? A code-tracing tutor investigation, International Journal of Artificial Intelligence in Education, 31, 4, pp. 784-819, (2020); 
Jennings J., Muldner K., Investigating students' reasoning in a code-tracing tutor, The International Conference on Artificial Intelligence in Education, pp. 203-214, (2021); 
Jin W., Automatic grading for program tracing exercises, Proceedings of the 51st ACM Technical Symposium on Computer Science Education, (2020); 
Kaila E., Rajala T., Laakso M.J., Salakoski T., Effects, experiences, and feedback from studies of a program visualization tool, Informatics in Education, 8, 1, pp. 17-34, (2009); 
Kakeshita T., Ohta K., Student log analysis functions for web-based programming education support tool pgtracer, Journal of Information Processing, 27, pp. 456-468, (2019); 
Koedinger K., McLaughlin E., Seeing language learning inside the math: Cognitive analysis yields transfer, Proceedings of the Annual Meeting of the Cognitive Science Society, 32No. 32, (2010); 
Koedinger K.R., Anderson J.R., Reifying implicit planning in geometry: Guidelines for model-based intelligent tutoring system design, Computers as cognitive tools, pp. 15-46, (1993); 
Koedinger K.R., Anderson J.R., Hadley W.H., Mark M.A., Intelligent tutoring goes to school in the big city, International Journal of Artificial Intelligence in Education, 8, 1, pp. 30-43, (1997); 
Koedinger K.R., Baker R.S., Cunningham K., Skogsholm A., Leber B., Stamper J., A data repository for the EDM community: The PSLC DataShop, Handbook of educational data mining, 43, pp. 43-56, (2010); 
Koedinger K.R., Corbett A.T., Perfetti C., The knowledge-learning-instruction framework: Bridging the science-practice chasm to enhance robust student learning, Cognitive Science, 36, 5, pp. 757-798, (2012); 
Koedinger K.R., Kim J., Jia J.Z., McLaughlin E.A., Bier N.L., Learning is not a spectator sport: Doing is better than watching for learning from a MOOC, Proceedings of the Second ACM Conference on Learning@Scale, pp. 111-120, (2015); 
Koedinger K.R., McLaughlin E.A., Stamper J.C., Automated student model improvement, Proceedings of the 5th International Conference on Educational Data Mining, pp. 17-24, (2012); 
Koedinger K.R., Stamper J.C., McLaughlin E.A., Nixon T., Using data-driven discovery of better student models to improve student learning, International Conference on Artificial Intelligence in Education, pp. 421-430, (2013); 
Kovalenko V., Bogomolov E., Bryksin T., Bacchelli A., Pathminer: A library for mining of path-based representations of code, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), pp. 13-17, (2019); 
Kumar A.N., Solving code-tracing problems and its effect on code-writing skills pertaining to program semantics, Proceedings of the 2015 ACM Conference on Innovation and Technology in Computer Science Education, pp. 314-319, (2015); 
Kumar A.N., Long term retention of programming concepts learned using a software tutor, International Conference on Intelligent Tutoring Systems, pp. 382-387, (2020); 
Linn M., The knowledge integration perspective on learning and instruction, The Cambridge handbook of the learning sciences, pp. 243-264, (2005); 
Lister R., Adams E.S., Fitzgerald S., Fone W., Hamer J., Lindholm M., McCartney R., Mostrom J.E., Sanders K., Seppala O., Simon B., Thomas L., A multi-national study of reading and tracing skills in novice programmers, ACM SIGCSE Bulletin, 36, 4, pp. 119-150, (2004); 
Liu R., Koedinger K.R., Closing the loop: Automated data-driven cognitive model discoveries lead to improved instruction and learning gains, Journal of Educational Data Mining, 9, 1, pp. 25-41, (2017); 
Lopez M., Whalley J., Robbins P., Lister R., Relationships between reading, tracing and writing skills in introductory programming, Proceedings of the Fourth International Workshop on Computing Education Research, pp. 101-112, (2008); 
Lovett M.C., A collaborative convergence on studying reasoning processes: A case study in statistics, Cognition and instruction: Twenty-five years of progress, pp. 347-384, (2001); 
Martin B., Mitrovic A., Koedinger K.R., Mathan S., Evaluating and improving adaptive educational systems with learning curves, User Modeling and User-Adapted Interaction, 21, 3, pp. 249-283, (2011); 
Muller O., Ginat D., Haberman B., Pattern-oriented instruction and its influence on problem decomposition and solution construction, Proceedings of the 12th Annual SIGCSE Conference on Innovation and Technology in Computer Science Education, pp. 151-155, (2007); 
Naps T., Rossling G., Brusilovsky P., English J., Jarc D., Karavirta V., Leska C., McNally M., Moreno A., Ross R.J., Urquiza-Fuentes J., Development of xml-based tools to support user interaction with algorithm visualization, ACM SIGCSE Bulletin, 37, 4, pp. 123-138, (2005); 
Nathan M.J., Petrosino A., Expert blind spot among preservice teachers, American Educational Research Journal, 40, 4, pp. 905-928, (2003); 
Nelson G.L., Teaching and assessing programming language tracing (Doctoral dissertation, University of Washington), (2021); 
Neves D.M., Anderson J.R., Knowledge compilation: Mechanisms for the automatization of cognitive skills, Cognitive skills and their acquisition, (1981); 
Qi R., Fossati D., Unlimited trace tutor: Learning code tracing with automatically generated programs, Proceedings of the 51st ACM Technical Symposium on Computer Science Education, pp. 427-433, (2020); 
Qian Y., Lehman J., Students' misconceptions and other difficulties in introductory programming: A literature review, ACM Transactions on Computing Education (TOCE), 18, 1, pp. 1-24, (2017); 
Rajala T., Laakso M.J., Kaila E., Salakoski T., Effectiveness of program visualization: A case study with the ViLLE tool, Journal of Information Technology Education, 7, (2008); 
Risha Z., Barria-Pineda J., Akhuseyinoglu K., Brusilovsky P., Stepwise help and scaffolding for Java code tracing problems with an interactive trace table, 21st Koli Calling International Conference on Computing Education Research, pp. 1-10, (2021); 
Risha Z., Brusilovsky P., Making it smart: Converting static code into an interactive trace table, Proceedings of Sixth SPLICE Workshop, (2020); 
Rist R.S., Schema creation in programming, Cognitive Science, 13, 3, pp. 389-414, (1989); 
Ritter S., Anderson J.R., Koedinger K.R., Corbett A., Cognitive tutor: Applied research in mathematics education, Psychonomic Bulletin & Review, 14, 2, pp. 249-255, (2007); 
Rivers K., Harpstead E., Koedinger K.R., Learning curve analysis for programming: Which concepts do students struggle with?, ICER, 16, pp. 143-151, (2016); 
Rosseel Y., lavaan: An R package for structural equation modeling, Journal of Statistical Software, 48, pp. 1-36, (2012); 
Salden R.J.C.M., Paas F., van Merrienboer J.J.G., A comparison of approaches to learning task selection in the training of complex cognitive skills, Computers in Human Behavior, 22, pp. 321-333, (2006); 
Schnackenberg H.L., Sullivan H.J., Leader L.F., Jones E.E., Learner preferences and achievement under differing amounts of learner practice, Educational Technology Research and Development, 46, 2, pp. 5-16, (1998); 
Shah A., Liu J., Stephens-Martinez K., Rodger S.H., The CS1 Reviewer App: Choose your own adventure or choose for me!, Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 1, pp. 331-337, (2021); 
Soloway E., Ehrlich K., Empirical studies of programming knowledge, IEEE Transactions on Software Engineering, SE-10, 5, pp. 595-609, (1984); 
Sorva J., Visual program simulation in introductory programming education, (2012); 
Sorva J., Karavirta V., Malmi L., A review of generic program visualization systems for introductory programming education, ACM Transactions on Computing Education (TOCE), 13, 4, pp. 1-64, (2013); 
Spohrer J.C., MARCEL: Simulating the novice programmer, (1992); 
Spohrer J.C., Soloway E., Putting it all together is hard for novice programmers, Proceedings of the IEEE International Conference on Systems, Man, and Cybernetics, pp. 12-15, (1985); 
Stegeman M., A set of exercises and tests for teaching tracing skills using a mastery approach, Proceedings of the 19th Koli Calling International Conference on Computing Education Research, pp. 1-2, (2019); 
Stephens-Martinez K., Ju A., Parashar K., Ongowarsito R., Jain N., Venkat S., Fox A., Taking advantage of scale by analyzing frequent constructed-response, code tracing wrong answers, Proceedings of the 2017 ACM Conference on International Computing Education Research, pp. 56-64, (2017); 
Sweller J., Van Merrienboer J.J., Paas F.G., Cognitive architecture and instructional design, Educational Psychology Review, 10, 3, pp. 251-296, (1998); 
Thomas A., Stopera T., Frank-Bolton P., Simha R., Stochastic tree-based generation of program-tracing practice questions, Proceedings of the 50th ACM Technical Symposium on Computer Science Education, pp. 91-97, (2019); 
Vainio V., Sajaniemi J., Factors in novice programmers' poor tracing skills, ACM SIGCSE Bulletin, 39, 3, pp. 236-240, (2007); 
VanLehn K., Lynch C., Schulze K., Shapiro J.A., Shelby R., Taylor L., Treacy D., Weinstein A., Wintersgill M., The Andes physics tutoring system: Lessons learned, International Journal of Artificial Intelligence in Education, 15, 3, pp. 147-204, (2005); 
Vesin B., Ivanovic M., Klasnja-Milicevic A., Budimac Z., Protus 2.0: Ontology-based semantic recommendation in programming tutoring system, Expert Systems with Applications, 39, 15, pp. 12229-12246, (2012); 
Wang S., Han Y., Wu W., Hu Z., Modeling student learning outcomes in studying programming language courses, 2017 Seventh International Conference on Information Science and Technology (ICIST), pp. 263-270, (2017); 
Weber G., Episodic learner modeling, Cognitive Science, 20, 2, pp. 195-236, (1996); 
Weber G., Brusilovsky P., ELM-ART: An adaptive versatile system for web-based instruction, International Journal of Artificial Intelligence in Education (IJAIED), 12, pp. 351-384, (2001); 
White B.Y., Frederiksen J.R., Causal models progressions as a foundation for intelligent learning environments, Artificial Intelligence, 42, pp. 99-157, (1990); 
Wightman D.C., Lintern G., Part-task training for tracking and manual control, Human Factors, 27, 3, pp. 267-283, (1985); 
Xie B., Loksa D., Nelson G.L., Davidson M.J., Dong D., Kwik H., Tan A.H., Hwa L., Li M., Ko A.J., A theory of instruction for introductory programming skills, Computer Science Education, 29, 2-3, pp. 205-253, (2019); 
Zanko Z., Mladenovic M., Krpan D., Analysis of school students' misconceptions about basic programming concepts, Journal of Computer Assisted Learning, 38, 3, pp. 719-730, (2022)#FRF#
