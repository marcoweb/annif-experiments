#ITI#Domain-Specific Modeling Languages in Computer-Based Learning Environments: a Systematic Approach to Support Science Learning through Computational Modeling#FTI#
#IRE# Driven by our technologically advanced workplaces and the surge in demand for proficiency in the computing disciplines, it is becoming imperative to provide computational thinking (CT) opportunities to all students. One approach for making computing accessible and relevant to learning and problem-solving in K-12 environments is to integrate it with existing Science, Technology, Engineering, and Math (STEM) curricula. However, novice student learners may face several difficulties in trying to learn STEM and computing concepts simultaneously. To address some of these difficulties, we present a systematic approach to learning STEM and CT by designing and developing domain-specific modeling languages (DSMLs) to aid students in their model building and problem-solving processes. The paper discusses a theoretical framework and the design principles for developing DSMLs, which is implemented as a four-step process. We apply the four-step process in three domains: Physics, Marine Biology, and Earth Science to demonstrate its generality, and then perform case studies to show how the DSMLs impact student learning and model building. We conclude with a discussion of our findings and then present directions for future work#FRE#
#IPC# Domain-specific modeling language; Evidence-centered design; Learning-by-modeling; Stem+CT; Synergistic learning#FPC#
#IRF# Araujo I., Veit E., Moreira M., Physics students' performance using computational modelling activities to improve kinematics graphs interpretation, Computers and Education, 50, 4, pp. 1128-1140, (2008); 
Basu S., Biswas G., Kinnebrew J.S., Using multiple representations to simultaneously learn computational thinking and middle school science, Proceedings of the thirtieth AAAI conference on artificial intelligence, pp. 3705-3711, (2016); 
Basu S., Biswas G., Kinnebrew J.S., Learner modeling for adaptive scaffolding in a computational thinking-based science learning environment, User Modeling and User-Adapted Interaction, 27, 1, pp. 5-53, (2017); 
Basu S., Biswas G., Sengupta P., Dickes A., Kinnebrew J.S., Clark D., Identifying middle school students’ challenges in computational thinking-based science learning, Research and Practice in Technology Enhanced Learning, 11, 1, pp. 1-35, (2016); 
Basu S., Dickes A., Kinnebrew J.S., Sengupta P., Biswas G., CTSiM: A computational thinking environment for learning science through simulation and modeling, Proceedings of the 5th international conference on computer supported education, pp. 369-378, (2013); 
Basu S., McElhaney K., Grover S., Harris C., Biswas G., A principled approach to designing assessments that integrate science and computational thinking, Proceedings of the 13Th International Conference of the Learning Sciences, pp. 384-391, (2018); 
Bau D., Gray J., Kelleher C., Sheldon J., Turbak F., Learnable programming: Blocks and beyond, Communications of the ACM, 60, 6, pp. 72-80, (2017); 
Berland M., Martin T., Benton T., Smith C.P., Davis D., Using learning analytics to understand the learning pathways of novice programmers, Journal of the Learning Sciences., 22, 4, pp. 564-599, (2013); 
Biswas G., Baker R.S., Paquette L., Data mining methods for assessing self-regulated learning, Educational Psychology Handbook Series. Handbook of Self-Regulation of Learning and Performance, pp. 388-403, (2018); 
Blikstein P., Worsley M., Piech C., Sahami M., Cooper S., Koller D., Programming pluralism: Using learning analytics to detect patterns in the learning of computer programming, Journal of the Learning Sciences, 23, 4, pp. 561-599, (2014); 
Bredeweg B., Liem J., Beek W., Linnebank F., Gracia J., Lozano E., Wissner M., Buhling R., Salles P., Noble R., Zitek A., Borisova P., Mioduser D., DynaLearn – An intelligent learning environment for learning conceptual knowledge, AI Magazine, 34, 4, pp. 46-65, (2013); 
Brennan K., Resnick M., New frameworks for studying and assessing the development of computational thinking. Paper presented at annual American Educational Research Association meeting, (2012); 
Brodie M.L., Mylopoulos J., On conceptual modelling: Perspectives from artificial intelligence, databases, and programming languages, (2012); 
Brown N.C., Monig J., Bau A., Weintrop D., Panel: Future directions of block-based programming, Proceedings of the 47th ACM technical symposium on computing science education, pp. 315-316, (2016); 
The Common Core State Standards for Mathematics, (2011); 
Chi M.T.H., Common sense conceptions of emergent processes: Why some misconceptions are robust, Journal of the Learning Sciences, 14, pp. 161-199, (2005); 
Chiu J., McElhaney K.W., Zhang N., Biswas G., Fried R., Basu S., Alozie N., A principled approach to NGSS-aligned curriculum development integrating science, engineering, and computation: A pilot study, Paper presented at the 2019 NARST annual international conference, (2019); 
Clark D., Nelson B., Sengupta P., D'Angelo C., Rethinking science learning through digital games and simulations: Genres, examples, and evidence, Learning Science: Computer Games, Simulations, and Education Workshop Sponsored by the National Academy of Sciences., (2009); 
Dede C., Technological supports for acquiring 21st century skills, International encyclopedia of education, pp. 158-166, (2010); 
van Deursen A., Domain-specific languages versus object-oriented frameworks: A financial engineering case study, Smalltalk and Java in Industry and Academia, STJA’97, pp. 35-39, (1997); 
van Deursen A., Klint P., Visser J., Domain-specific languages: An annotated bibliography, SIGPLAN Notices, 35, pp. 26-36, (2000); 
Disessa A.A., Changing Minds: Computers, Learning, and Literacy, (2001); 
Dong Y., Kinnebrew J., Biswas G., Comparison of selection criteria for multi-feature hierarchical activity Mining in Open-Ended Learning Environments, Proceedings of the 9th international conference on educational data mining, pp. 591-592, (2016); 
Gasevic D., Jovanovic J., Pardo A., Dawson S., Detecting learning strategies with analytics: Links with self-reported measures and academic performance, Journal of Learning Analytics, 4, 2, pp. 113-128, (2017); 
Grover S., An Assessment for Introductory Programming Concepts in Middle School Computer Science. Presented at the 2019, Annual meeting of the National Council on measurement in education (NCME), (2019); 
Grover S., Designing an Assessment for Introductory Programming Concepts in Middle School Computer Science, Proceedings of the 51St ACM Technical Symposium on Computing Science Education (SIGCSE’20), (2020); 
Grover S., Basu S., Measuring student learning in introductory block-based programming: Examining misconceptions of loops, variables, and Boolean logic, Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education, pp. 267-272, (2017); 
Grover S., Pea R., Computational thinking: A competency whose time has come, Computer Science Education: Perspectives on Teaching and Learning, (2018); 
Harvey B., Garcia D.D., Barnes T., Titterton N., Armendariz D., Segars L., Lemon E., Morris S., Paley J., SNAP! (build your own blocks), Proceedings of the 44th ACM technical symposium on computer science education, SIGCSE '13, (2013); 
Hashem K., Mioduser D., The contribution of learning by modeling (LbM) to students’ understanding of complexity concepts, International Journal of e-Education, e-Business, e-Management and e-Learning, 1, 2, pp. 151-157, (2011); 
Hestenes D., Wells M., Swackhamer G., Force concept inventory, The Physics Teacher, 30, pp. 141-166, (1992); 
Hilton M., Exploring the Intersection of Science Education and 21St Century Skills: A Workshop Summary, (2010); 
Hudak P., Building domain-specific embedded languages, ACM Computing Surveys (CSUR), 28, 4, pp. 191-196, (1996); 
Hutchins N., Biswas G., Conlin L., Emara M., Grover S., Basu S., McElhaney K., Studying synergistic learning of physics and computational thinking in a learning by modeling environment, In Proceedings of the 26Th International Conference on Computers in Education, pp. 153-162, (2018); 
Hutchins N., Biswas G., Maroti M., Ledeczi A., Grover S., Wolf R., Blair K.P., Chin D.B., Conlin L., Basu S., McElhaney K., C2STEM: A system for synergistic learning of physics and computational thinking, Journal of Science Education and Technology (JOST), 29, pp. 83-100, (2020); 
Jarvela S., Gasevic D., Seppanen T., Pechenizkiy M., Kirschner P.A., Bridging learning sciences, machine learning and affective computing for understanding cognition and affect in collaborative learning, British Journal of Educational Technology, (2020); 
Jona K., Wilensky U., Trouille L., Horn M.S., Orton K., Weintrop D., Beheshti E., Embedding computational thinking in science, technology, engineering, and math (CT-STEM). In future directions in computer science education summit meeting, (2014); 
Jonassen D., Strobel J., Gottdenker J., Model building for conceptual change, Interactive Learning Environments, 13, 1-2, pp. 15-37, (2005); 
van Joolingen W.R., De Jong T., Lazonder A., Savelsbergh E.R., Manlove S., Co-lab: Research and development of an online learning environment for collaborative scientific discovery learning, Computers in Human Behavior, 21, pp. 671-688, (2005); 
Karsai G., Krahn H., Pinkernell C., Rumpe B., Schindler M., Volkel S., Design guidelines for domain specific languages, (2014); 
Keating T., Barnett M., Barab S.A., Hay K.E., The virtual solar system project: Developing conceptual understanding of astronomical concepts through building three-dimensional computational models, Journal of Science Education and Technology, 11, 3, pp. 261-275, (2002); 
Kelly S., Tolvanen J., Domain-Specific Modeling: Enabling Full Code Generation, (2008); 
Kinnebrew J.S., Loretz K.M., Biswas G., A contextualized, differential sequence mining method to derive students' learning behavior patterns, Journal of Educational Data Mining, 5, 1, pp. 190-219, (2013); 
Koh K.H., Basawapatna A., Bennett V., Repenning A., Towards the automatic recognition of computational thinking for adaptive visual language learning, Proceedings of the 2010 IEEE Symposium on Visual Languages and Human-Centric Computing, pp. 59-66, (2010); 
Ledeczi A., Bakay A., Maroti M., Volgyesi P., Nordstrom G., Sprinkle J., Karsai G., Composing domain-specific design environments, Computer, 34, 11, pp. 44-51, (2001); 
Leelawong K., Biswas G., Designing learning by teaching agents: The Betty’s brain system, International Journal of Artificial Intelligence in Education, 18, 3, pp. 181-208, (2008); 
Lehrer R., Schauble L., The development of scientific thinking, Handbook of child psychology and developmental science, 2, pp. 671-714, (2015); 
Levesque H.J., Knowledge representation and reasoning, Annual review of computer science, 1, 1, pp. 255-287, (1986); 
McElhaney K.W., Basu S., Wetzel T., Boyce J., Three-dimensional assessment of NGSS upper elementary engineering design performance expectations, NARST Annual International Conference, (2019); 
Metcalf S.J., Krajcik J., Soloway E., Model-it: A design retrospective, Innovations in science and mathematics education: Advanced designs for technologies of learning, pp. 77-115, (2000); 
Mislevy R.J., Haertel G.D., Implications of evidence-centered design for educational testing, Educational Measurement: Issues and Practice, 25, 4, pp. 6-20, (2006); 
Mislevy R.J., Riconscente M., Evidence-centered assessment design: Layers, structures, and terminology (PADI technical report 9), (2005); 
Lead States N.G.S.S., Next Generation Science Standards: For States, by States, (2013); 
Nikolai C., Madey G., Tools of the trade: A survey of various agent based modeling platforms, Journal of Artificial Societies and Social Simulation, 12, 2, (2009); 
Niwa K., Sasaki K., Ihara H., An experimental comparison of knowledge representation schemes, AI Magazine, 5, 2, (1984); 
Olson I.C., Horn M., Wilensky U., Modeling on the table: Agent-based modeling in elementary school with NetTango, Proceedings of 10th international conference on interaction design and children, (2011); 
Paige R.F., Ostroff J.S., Brooke P.J., Principles for modeling language design, Information and Software Technology, 42, pp. 665-675, (2000); 
Pausch R., Burnette T., Capeheart A.C., Conway M., Cosgrove D., DeLine R., Durbin J., Gossweiler R., Koga S., White J., Alice: Rapid prototyping system for virtual reality, IEEE Computer Graphics and Applications, 15, 3, pp. 8-11, (1995); 
Piech C., Huang J., Nguyen A., Phulsuksombati M., Sahami M., Guibas L., Learning program embeddings to propagate feedback on student code, Proceedings of the 32nd international conference on machine learning, pp. 1093-1102, (2015); 
Redish E.F., Wilson J.M., Student programming in the introductory physics course: M.U.P.P.E.T, American Journal of Physics, 61, pp. 222-232, (1993); 
Repenning A., Webb D., Ioannidou A., Scalable game design and the development of a checklist for getting computational thinking into public schools, Proceedings of the 41st ACM technical symposium on computer science education (SIGCSE), (2010); 
Resnick M., Maloney J., Monroy-Hernandez A., Rusk N., Eastmond E., Brennan K., Millner A., Rosenbaum E., Silver J., Silverman B., Kafai Y., Scratch: Programming for all, Communications of the ACM, 52, 11, pp. 60-67, (2009); 
Schwartz D.L., Bransford J.D., Sears D., Efficiency and innovation in transfer, Transfer of learning: Research and perspectives, pp. 1-52, (2005); 
Schwarz C.V., White B.Y., Metamodelling knowledge: Developing students’ understanding of scientific modelling, Cognition and Instruction, 23, 2, pp. 165-205, (2005); 
Segedy J.R., Kinnebrew J.S., Biswas G., Using coherence analysis to characterize self-regulated learning Behaviours in open-ended learning environments, Journal of Learning Analytics, 2, 1, pp. 13-48, (2015); 
Selic B., A systematic approach to domain-specific language design using UML, Proceedings of the 10Th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, pp. 2-9, (2007); 
Sengupta P., Dickes A., Farris A., Toward a phenomenology of computational thinking in STEM education, Computational thinking in the STEM disciplines, (2018); 
Sengupta P., Dickes A., Farris A.V., Karan A., Martin D., Wright M., Programming in K-12 science classrooms, Communications of the ACM, 58, 11, pp. 33-35, (2015); 
Sengupta P., Farris A.V., Learning kinematics in elementary grades using agent-based computational modeling: A visual programming based approach, Proceedings of the 11th international conference on Interaction Design & Children, pp. 78-87, (2012); 
Sengupta P., Farris A.V., Wright M., From agents to continuous change via aesthetics: Learning mechanics with visual agent-based computational modeling, Technology, Knowledge and Learning, 17, 1-2, pp. 23-42, (2012); 
Sengupta P., Kinnebrew J.S., Basu S., Biswas G., Clark D., Integrating computational thinking with k-12 science education using agent-based computation: A theoretical framework, Education and Information Technologies, 18, 2, pp. 351-380, (2013); 
Shen J., Lei J., Chang H.Y., Namdar B., Technology-enhanced, modeling-based instruction (TMBI) in science education, In Handbook of Research on Educational Communications and Technology, pp. 529-540, (2014); 
Sherin B.L., A comparison of programming languages and algebraic notation as expressive languages for physics, International Journal of Computers for Mathematical Learning, 6, 1, pp. 1-61, (2001); 
Sherin B.L., How students understand physics equations, Cognition and Instruction, 19, 4, pp. 479-541, (2001); 
Sherin B., diSessa A.A., Hammer D.M., Dynaturtle revisited: Learning physics through collaborative design of a computer model, Interactive Learning Environments, 3, 2, pp. 91-118, (1993); 
Snyder C., Hutchins N., Biswas G., Emara M., Grover S., Conlin L., Analyzing students’ Synergistic Learning Processes in Physics and CT by Collaborative Discourse Analysis, pp. 360-367, (2019); 
Sun D., Looi C.K., Designing a web-based science learning environment for model-based collaborative inquiry, Journal of Science Education and Technology, 22, 1, pp. 73-89, (2013); 
Tissenbaum M., Sheldon J., Abelson H., From computational thinking to computational action, Communications of the ACM, 62, 3, pp. 34-36, (2019); 
Tisue S., Wilensky U., NetLogo: Design and Implementation of a Multi-Agent Modeling Environment, Paper Presented at the Agent2004 Conference, (2004); 
Trowbridge D.E., McDermott L.C., Investigation of student understanding of the concept of acceleration in one dimension, American Journal of Physics, 49, 3, pp. 242-253, (1981); 
Vanlehn K., Model construction as a learning activity: A design space and review, Interactive Learning Environments, 21, 4, pp. 371-413, (2013); 
Vanlehn K., Chung G., Grover S., Madni A., Wetzel J., Learning science by constructing models: Can dragoon increase learning without increasing the time required?, International Journal of Artificial Intelligence in Education, 26, 4, pp. 1033-1068, (2016); 
Vanlehn K., Wetzel J., Grover S., van De Sande B., Learning how to construct models of dynamic systems: An initial evaluation of the dragoon intelligent tutoring system, IEEE Transactions on Educational Technology, 10, 2, pp. 154-167, (2015); 
Weintrop D., Beheshti E., Horn M., Orton K., Jona K., Trouille L., Wilensky U., Defining computational thinking for mathematics and science classrooms, Journal of Science Education and Technology, 25, 1, pp. 127-147, (2016); 
Werner L., McDowell C., Denner J., A first step in learning analytics: Pre-processing low-level Alice logging data of middle school students, Journal of Educational Data Mining, 5, 2, pp. 11-37, (2013); 
Wetzel J., Vanlehn K., Chaudhari P., Desai A., Feng J., Grover S., Joiner R., Kong-Silvert M., Patade V., Samala R., Tiwari M., van De Sande B., The design and development of the dragoon intelligent tutoring system for model construction: Lessons learned, Interactive Learning Environments, 25, 3, pp. 361-381, (2017); 
Wieman C.E., Adams W.K., Perkins K.K., PhET research: Simulations that enhance learning, Science, 322, pp. 682-683, (2008); 
Wilensky U., Brady C.E., Horn M.S., Fostering computational literacy in science classrooms, Communications of the ACM, 57, 8, pp. 24-28, (2014); 
Wilensky U., Reisman K., Thinking like a wolf, a sheep, or a firefly: Learning biology through constructing and testing computational theories—An embodied modeling approach, Cognition and Instruction, 24, 2, pp. 171-209, (2006); 
Wilensky U., Resnick M., Thinking in levels: A dynamic systems perspective to making sense of the world, Journal of Science Education and Technology, 8, 1, pp. 3-19, (1999); 
Wing J., Research notebook: Computational thinking—What and why, The Link Magazine, pp. 20-23, (2011); 
Zhang N., Biswas G., Chiu J.L., McElhaney K.W., Analyzing students’ design solutions in an NGSS-aligned earth sciences curriculum, Proceedings of the 20Th International Conference on Artificial Intelligence in Education, pp. 532-543, (2019); 
Zhang N., Biswas G., Dong Y., Characterizing students’ learning behaviors using unsupervised learning methods, Artificial Intelligence in Education, 10331, pp. 430-441, (2017); 
Zhang N., Biswas G., McElhaney K.W., Basu S., McBride E., Chiu J.L., Studying the Interactions Between Science, Engineering, and Computational Thinking in a Learning-by-Modeling Environment, Artificial Intelligence in Education. AIED 2020. Lecture notes in computer science, 12163, (2020)#FRF#
