#ITI#Computational thinking practices: Lessons learned from a problem-based curriculum in primary education#FTI#
#IRE# The primary goals of this research were to investigate the development of computational thinking (CT) skills among elementary students and to identify areas for improvement in their CT practices. Empirical investigations, accomplished in a learner-centered, problem-based learning curriculum for sixth-graders, sought to examine student proficiency in CT practices by analyzing programs developed by students. A total of 30 students participated in this study and eleven Scratch projects were analyzed. Results revealed that students showed high competence in Event, Parallelism, Sequence, and Design while low competence in Loop & Operator. Examination of the flow of their programs revealed how effectively students utilized CT concepts in CT practices. As areas for improvement, researchers identified an extremely fine-grained programming (EFGP) approach and a lack of abstraction#FRE#
#IPC# abstraction; Computational thinking; CS education; CT practice; problem-based learning#FPC#
#IRF# Allsop Y., Assessing computational thinking process using a multiple evaluation approach, International Journal of Child-Computer Interaction, 19, pp. 30-55, (2019); 
Bell T., Alexander J., Freeman I., Grimley M., Computer science unplugged: School students doing real computing without computers, The New Zealand Journal of Applied Computing and Information Technology, 13, 1, pp. 20-29, (2009); 
Bogaerts S.A., (2013); 
Braun V., Clarke V., Using thematic analysis in psychology, Qualitative Research in Psychology, 3, 2, pp. 77-101, (2006); 
Brennan K., Resnick M., (2012); 
(2020); 
Chen G., Shen J., Barth-Cohen L., Jiang S., Huang X., Eltoukhy M., Assessing elementary students’ computational thinking in everyday reasoning and robotics programming, Computers & Education, 109, pp. 162-175, (2017); 
Coban E., Korkmaz O., An alternative approach for measuring computational thinking: Performance-based platform, Thinking Skills and Creativity, 42, (2021); 
Falloon G., An analysis of young students’ thinking when completing basic coding tasks using Scratch Jnr. On the iPad, Journal of Computer Assisted Learning, 32, 6, pp. 576-593, (2016); 
Grover S., Pea R., Cooper S., Designing for deeper learning in a blended computer science course for middle school students, Computer Science Education, 25, 2, pp. 199-237, (2015); 
Hermans F., Aivaloglou E., Do code smells hamper novice programming? A controlled experiment on Scratch programs, 2016 IEEE 24th International Conference on Program Comprehension (ICPC), (2016); 
Hsu T.-C., Chang S.-C., Hung Y.-T., How to learn and how to teach computational thinking: Suggestions based on a review of the literature, Computers & Education, 126, pp. 296-310, (2018); 
Kafai Y., Proctor C., Lui D., From theory bias to theory dialogue: Embracing cognitive, situated, and critical framings of computational thinking in K-12 CS education, ACM Inroads, 11, 1, pp. 44-53, (2020); 
Kelleher C., Pausch R., Kiesler S., (2007); 
Keune A., Peppler K.A., Wohlwend K.E., Recognition in makerspaces: Supporting opportunities for women to “make” a STEM career, Computers in Human Behavior, 99, pp. 368-380, (2019); 
Klopfenstein L., Fedosyeyev A., Bogliolo A., (2017); 
(2021); 
Maloney J., Resnick M., Rusk N., Silverman B., Eastmond E., The scratch programming language and environment, ACM Transactions on Computing Education, 10, 4, pp. 1-15, (2010); 
Meerbaum-Salant O., Armoni M., Ben-Ari M., (2011); 
Modekurty S., Fong J., Cheng H.H., (2014); 
(2019); 
(2021); 
Peppler K., Gresalfi M., Tekinbas K.S., Santo R., Soft circuits: Crafting e-fashion with DIY electronics, (2014); 
Roman-Gonzalez M., Moreno-Leon J., Robles G., Combining assessment tools for a comprehensive evaluation of computational thinking interventions, Computational thinking education, (2019); 
Roman-Gonzalez M., Perez-Gonzalez J.-C., Jimenez-Fernandez C., Which cognitive abilities underlie computational thinking? Criterion validity of the Computational Thinking Test, Computers in Human Behavior, 72, pp. 678-691, (2017); 
Saez-Lopez J.-M., Roman-Gonzalez M., Vazquez-Cano E., Visual programming languages integrated across the curriculum in elementary school: A two year case study using “Scratch” in five schools, Computers & Education, 97, pp. 129-141, (2016); 
Salac J., White M., Wang A., Franklin D., (2019); 
Savery J.R., Overview of problem-based learning: Definitions and distinctions, Interdisciplinary Journal of Problem-Based Learning, 1, 1, pp. 9-20, (2006); 
Schreiber N., Theyssen H., Schecker H., Process-oriented and product-oriented assessment of experimental skills in physics: A comparison, Insights from research in science teaching and learning: Selected papers from the ESERA 2013 conference, pp. 29-43, (2016); 
Tang X., Yin Y., Lin Q., Hadad R., Zhai X., Assessing computational thinking: A systematic review of empirical studies, Computers & Education, 148, (2020); 
Tran Y., Computational thinking equity in elementary classrooms: What third-grade students know and can do, Journal of Educational Computing Research, 57, 1, pp. 3-31, (2019); 
Werner L., Denner J., Campe S., Using computer game programming to teach computational thinking skills, Learning, education & games, pp. 37-53, (2014); 
Wing J.M., Computational thinking, Communications of the ACM, 49, 3, pp. 33-35, (2006)#FRF#
