#ITI#Real Coding and Real Games: Design and Development of a Middle School Curriculum Using Unity 3D#FTI#
#IRE#In this paper, we describe the design, development, and implementation of a curriculum based on teaching computer science using an industry-standard game-design software: Unity 3D. We discuss the theoretical underpinnings of our instructional design process and steps we have taken to introduce complexity and maintain student motivation. We discuss the challenges of this implementation and possible solutions and detail the additional steps related to teacher professional development, which is a key element for success of new and innovative curricular implementations such as ours#FRE#
#IPC#C#; Computer science education; Game-design; Unity3D#FPC#
#IRF#Akcaoglu M., Learning problem-solving through making games at the game design and learning summer program, Educational Technology Research and Development, 62, 5, pp. 583-600, (2014); 
Akcaoglu M., Design and implementation of the game-design and learning program, TechTrends, 60, 2, pp. 114-123, (2016); 
Akcaoglu M., Green L.S., Teaching systems thinking through game design, Educational Technology Research and Development, 67, 1, pp. 1-19, (2019); 
Akcaoglu M., Kale U., Teaching to teach (with) game design: Game design and learning workshops for preservice teachers, Contemporary Issues in Technology and Teacher Education, 16, 1, pp. 60-81, (2016); 
Akcaoglu M., Koehler M.J., Cognitive outcomes from the Game-Design and Learning (GDL) after-school program, Computers & Education, 75, pp. 72-81, (2014); 
Akcaoglu M., Sonnleitner P., Hodges C., Gutierrez A., Teaching Complex Problem Solving Through Digital Game Design, Handbook of research on serious games for educational applications, pp. 217-233, (2016); 
Basawapatna A.R., Koh K.H., Repenning A., Using scalable game design to teach computer science from middle school to graduate school, In Proceedings of the Fifteenth Annual Conference on Innovation and Technology in Computer Science Education, pp. 224-228, (2010); 
Baytak A., Land S.M., An investigation of the artifacts and process of constructing computer games about environmental science in a fifth grade classroom, Educational Technology Research and Development, 59, 6, pp. 765-782, (2011); 
Bosman L., Chelberg K., Winn R., How does service learning increase and sustain interest in engineering education for underrepresented pre-engineering college students?, Journal of STEM Education, 18, 2, pp. 5-9, (2017); 
Campe S., Green E., Denner J., K-12 Pair Programming Toolkit, ETR, (2019); 
Comber O., Motschnig R., Mayer H., Haselberger D., Engaging students in computer science education through game development with Unity, . in 2019 IEEE Global Engineering Education Conference (EDUCON) (, pp. 199-205, (2019); 
Deals T., This engine is dominating the gaming industry right now. The Next Web, (2016); 
Denner J., Werner L., Ortiz E., Computer games created by middle school girls: Can they be used to measure understanding of computer science concepts?, Computers & Education, 58, 1, pp. 240-249, (2012); 
Denner J., Campe S., Werner L., Does computer game design and programming benefit children? A meta-synthesis of research, ACM Transactions on Computing Education (TOCE), 19, 3, (2019); 
Dickson P.E., Using unity to teach game development: When you've never written a game, Proceedings of the 2015 ACM Conference on Innovation and Technology in Computer Science Education, pp. 75-80, (2015); 
Earp J., Game making for learning: A systematic review of the research literature, Proceedings of 8Th International Conference of Education, Research and Innovation, pp. 6426-6435, (2015); 
Esquenazi N., Coding Is collaborative and STEM education should be, too, Bloomberg, (2020); 
Goode J., Margolis J., Chapman G., Curriculum is not enough: The educational theory and research foundation of the exploring computer science professional development model, In Proceedings of the 45Th ACM Technical Symposium on Computer Science Education, pp. 493-498, (2014); 
Grover S., Basu S., Measuring student learning in introductory block-based programming: Examining misconceptions of loops, variables, and boolean logic, In Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education, pp. 267-272, (2017); 
Guzdial M., Learner-centered design of computing education: Research on computing for everyone, (2015); 
Hartl A.C., DeLay D., Laursen B., Denner J., Werner L., Campe S., Ortiz E., Dyadic instruction for middle school students: Liking promotes learning, Learning and Individual Differences, 44, pp. 33-39, (2015); 
Hodges Akcaoglu M., Allen A., Dogan S., Teacher Self-efficacy During Professional Development for Game Design and Unity, Proceedings of the 53Rd ACM Technical Symposium on Computer Science Education, V, 2, pp. 1-1144, (2022); 
Kafai Y.B., Burke Q., Connected gaming: What making video games can teach us about learning and literacy, (2016); 
Learning through play is more than play, 3-Star Learning Experiences: An Evidence-Informed Blog for Learning Professionals., (2020); 
Li K., Keller J.M., Use of the ARCS model in education: A literature review, Computers & Education, 122, pp. 54-62, (2018); 
Mayer R.E., Wittrock M.C., Problem solving, Handbook of educational psychology, pp. 287-303, (2006); 
Meerbaum-Salant O., Armoni M., Ben-Ari M., Habits of programming in scratch, In Proceedings of the 16Th Annual Joint Conference on Innovation and Technology in Computer Science Education, pp. 168-172, (2011); 
Menekse M., Computer science teacher professional development in the United States: A review of studies published between 2004 and 2014, Computer Science Education, 25, 4, pp. 325-350, (2015); 
Penuel W.R., Roschelle J., Shechtman N., Designing formative assessment software with teachers: An analysis of the co-design process, Research and Practice in Technology Enhanced Learning, 2, 1, pp. 51-74, (2007); 
Repenning A., Moving beyond syntax: Lessons from 20 years of blocks programing in AgentSheets, Journal of Visual Languages and Sentient Systems, 3, 1, pp. 68-89, (2017); 
Repenning A., Webb D., Ioannidou A., Scalable game design and the development of a checklist for getting computational thinking into public schools, In Proceedings of the 41St ACM Technical Symposium on Computer Science Education, pp. 265-269, (2010); 
Repenning A., Webb D.C., Koh K.H., Nickerson H., Miller S.B., Brand, C.,.. & Gutierrez, K, Scalable Game Design: A Strategy to Bring Systemic Computer Science Education to Schools through Game Design and Simulation Creation. ACM Transactions on Computing Education (TOCE), 15, 2, (2015); 
Sullivan F.R., Denner J., Why don't we do a better job of teaching computer science?, Education Week, 36, 36, (2017); 
Sweller J., Cognitive load theory and educational technology, Educational Technology Research and Development, 68, 1, pp. 1-16, (2020); 
Tlili A., Essalmi F., Jemni M., Towards applying Kellerâ€™s ARCS model and learning by doing strategy in classroom courses., (2017); 
Powering the real-time revolution, Public Relations; 
Werner L., Denner J., Campe S., Torres D.M., Computational sophistication of games programmed by children: A model for its measurement, ACM Transactions on Computing Education (TOCE), 20, 2, pp. 1-23, (2020)#FRF#
