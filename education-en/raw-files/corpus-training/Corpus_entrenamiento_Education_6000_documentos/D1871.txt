#ITI#Improving Engagement in Program Construction Examples for Learning Python Programming#FTI#
#IRE# This research is focused on how to support students’ acquisition of program construction skills through worked examples. Although examples have been consistently proven to be valuable for student’s learning, the learning technology for computer science education lacks program construction examples with interactive elements that could engage students. The goal of this work is to investigate the value of the “engaging” features in programming examples. We introduce PCEX, an online tool developed to present program construction examples in an engaging fashion. We also present the results of a controlled study with a between-subject design that was conducted in a large introductory Python programming class to compare PCEX with non-interactive worked examples focused on program construction. The results of our study show the positive impact of interactive program construction examples on student’s engagement, problem-solving performance, and learning#FRE#
#IPC# Classroom study; CS1; Introductory programming education; Program construction; Python; Worked examples#FPC#
#IRF# Aiken L.S., West S.G., Reno R.R., Multiple Regression: Testing and Interpreting Interactions., (1991); 
Atkinson R.K., Renkl A., Interactive example-based learning environments: Using interactive elements to encourage effective processing of worked examples, Educational Psychology Review, 19, 3, pp. 375-386, (2007); 
Atkinson R.K., Derry S.J., Renkl A., Wortham D., Learning from examples: Instructional principles from the worked examples research, Review of educational research, 70, 2, pp. 181-214, (2000); 
Auvinen T., Hakulinen L., Malmi L., Increasing students’ awareness of their behavior in online learning environments with visualizations and achievement badges, IEEE Transactions on Learning Technologies, 8, 3, pp. 261-273, (2018); 
Bathgate M., Schunn C., The psychological characteristics of experiences that influence science motivation and content knowledge, International Journal of Science Education, 39, 17, pp. 2402-2432, (2017); 
Bloom S.B., Taxonomy of educational objectives, handbook I: The cognitive domain, (1956); 
Brna P., Searching for examples with a programming techniques editor, Journal of Computing and Information Technology, 6, 1, pp. 13-26, (1998); 
Brusilovsky P., Explanatory visualization in an educational programming environment: Connecting examples with general knowledge, 4Th International Conference on Human-Computer Interaction, EWHCI’94, Vol. 876 of Lecture Notes in Computer Science, pp. 202-212, (1994); 
Brusilovsky P., Yudelson M.V., From webex to navex: Interactive access to annotated program examples, Proceedings of the IEEE, 96, 6, pp. 990-999, (2008); 
Brusilovsky P., Yudelson M., Hsiao I.-H., Problem solving examples as first class objects in educational digital libraries: Three obstacles to overcome, Journal of Educational Multimedia and Hypermedia, 18, 3, pp. 267-288, (2009); 
Byrne M.D., Catrambone R., Stasko J.T., Evaluating animations as student aids in learning computer algorithms, Computers & education, 33, 4, pp. 253-278, (1999); 
Catrambone R., The subgoal learning model: Creating better examples so that students can solve novel problems, Journal of Experimental Psychology: General, 127, 4, pp. 355-376, (1998); 
Chen X., Mitrovic A., Matthews M., Learning from worked examples, erroneous examples and problem solving: Towards adaptive selection of learning activities, IEEE Transactions on Learning Technologies, pp. 1-1, (2019); 
Chen X., Mitrovic A., Matthews M., Investigating the effect of agency on learning from worked examples, erroneous examples and problem solving, International Journal of Artificial Intelligence in Education, (2019); 
Chi M.T.H., Bassok M., Lewis M.W., Reimann P., Glaser R., Self-explanations: How students study and use examples in learning to solve problems, Cognitive Science, 13, 2, pp. 145-182, (1989); 
Christenson S.L., Reschly A.L., Wylie C., Handbook of Research on Student Engagement., (2012); 
Cooper S., Dann W., Pausch R., Teaching objects-first in introductory computer science, ACM SIGCSE Bulletin, 35, pp. 191-195, (2003); 
Dann W., Cosgrove D., Slater D., Culyba D., Cooper S., Mediated transfer: Alice 3 to java, Proceedings of the 43Rd ACM Technical Symposium on Computer Science Education, pp. 141-146, (2012); 
Davidovic A., Warren J., Trichina E., Learning benefits of structural example-based adaptive tutoring systems, IEEE Transactions on Education, 46, 2, pp. 241-251, (2003); 
Ericson B.J., Guzdial M.J., Morrison B.B., Analysis of interactive features designed to enhance learning in an ebook, Proceedings of the 11Th Annual International Conference on International Computing Education Research, pp. 169-178, (2015); 
Ericson B.J., Margulieux L.E., Rick J., Solving parsons problems versus fixing and writing code, Proceedings of the 17Th Koli Calling Conference on Computing Education Research, pp. 20-29, (2017); 
Esteves M., Mendes A., Oop-anim, a system to support learning of basic object oriented programming concepts, Proceedings of compsystech’2003-international Conference on Computer Systems and Technologies, (2003); 
Evans C., Gibbons N.J., The interactivity effect in multimedia learning, Computers & Education, 49, 4, pp. 1147-1160, (2007); 
Fabic G.V.F., Mitrovic A., Neshatian K., Evaluation of parsons problems with menu-based self-explanation prompts in a mobile python tutor, International Journal of Artificial Intelligence in Education, (2019); 
Getao K.W., An environment to support the use of program examples while learning to program in lisp, Proceedings of the IFIP TC13 3Rd International Conference on Human-Computer Interaction, pp. 1015-1016, (1990); 
Hansen S.R., Narayanan N.H., Schrimpsher D., Helping learners visualize and comprehend algorithms, Interactive Multimedia Electronic Journal of Computer-Enhanced Learning, 2, 1, (2000); 
Harvey B., Monig J., Bringing “no ceiling” to scratch: Can one language serve kids and computer scientists, Proc Constructionism., (2010); 
Hundhausen C.D., Douglas S.A., Stasko J.T., A meta-study of algorithm visualization effectiveness, Journal of Visual Languages & Computing, 13, 3, pp. 259-290, (2002); 
Ihantola P., Karavirta V., Two-Dimensional Parson’s Puzzles: The Concept, Tools, and First Observations, Journal of Information Technology Education: Innovations in Practice, 10, pp. 1-14, (2011); 
Kalyuga S., Chandler P., Sweller J., Incorporating learner experience into the design of multimedia instruction, Journal of Educational Psychology, 92, 1, pp. 126-136, (2000); 
Kalyuga S., Chandler P., Tuovinen J., Sweller J., When problem solving is superior to studying worked examples, Journal of Educational Psychology, 93, 3, pp. 579-588, (2001); 
Kalyuga S., Ayres P., Chandler P., Sweller J., The expertise reversal effect, Educational Psychologist, 38, 1, pp. 23-31, (2003); 
Kay R.H., Knaack L., Assessing learning, quality and engagement in learning objects: The learning object evaluation scale for students (loes-s), Educational Technology Research and Development, 57, 2, pp. 147-168, (2009); 
Khandwala K., Guo P.J., Codemotion: Expanding the design space of learner interactions with computer programming tutorial videos, Proceedings of the Fifth Annual ACM Conference on Learning at Scale, 10, pp. 1-57, (2018); 
Lawrence A.W., Empirical studies of the value of algorithm animation in algorithm understanding, (1993); 
Lieberman H., An example-based environment for beginning programmers, Artificial Intelligence and Education, pp. 135-151, (1987); 
Linn M.C., Clancey M.J., The case for case studies of programming problems, Communications of the ACM, 35, 3, pp. 121-132, (1992); 
Loboda T., Guerra J., Hosseini R., Brusilovsky P., Mastery grids: An open source social educational progress visualization, 9Th European Conference on Technology Enhanced Learning (EC-TEL 2014), Vol. 8719 of Lecture Notes in Computer Science, pp. 235-248, (2014); 
Loboda T.D., Brusilovsky P., User-adaptive explanatory program visualization: Evaluation and insights from eye movements, User Modeling and User-Adapted Interaction, 20, 3, pp. 191-226, (2010); 
McLaren B.M., Adams D., Durkin K., Goguadze G., Mayer R.E., Rittle-Johnson B., Sosnovsky S., Isotani S., van Velsen M., To err is human, to explain and correct is divine: A study of interactive erroneous examples with middle school math students, 7Th European Conference on Technology Enhanced Learning (EC-TEL 2012), Vol. 7563 of Lecture Notes in Computer Science, pp. 222-235, (2012); 
Miller B.N., Ranum D.L., Beyond pdf and epub: Toward an interactive textbook, Proceedings of the 17Th ACM Annual Conference on Innovation and Technology in Computer Science Education, pp. 150-155, (2012); 
Miyadera Y., Kurasawa K., Nakamura S., Yonezawa N., Yokoyama S., A real-time monitoring system for programming education using a generator of program animation systems, JCP, 2, 3, pp. 12-20, (2007); 
Morrison B.B., Margulieux L.E., Ericson B., Guzdial M., Subgoals help students solve parsons problems, Proceedings of the 47Th ACM Technical Symposium on Computing Science Education, pp. 42-47, (2016); 
Myller N., Automatic prediction question generation during program visualization, Proceedings of the 4Th Program Visualization Workshop, (2006); 
Najar A.S., Mitrovic A., McLaren B.M., Learning with intelligent tutors and worked examples: Selecting learning activities adaptively leads to better learning outcomes than a fixed curriculum, User Modeling and User-Adapted Interaction, 26, 5, pp. 459-491, (2016); 
Naps T.L., Jhavé: Supporting algorithm visualization, IEEE Computer Graphics and Applications, 25, 5, pp. 49-55, (2005); 
Naps T.L., Eagan J.R., Norton L.L., Jhavé – an environment to actively engage students in web-based algorithm visualizations, ACM SIGCSE Bulletin, 32, pp. 109-113, (2000); 
Naps T.L., Rossling G., Almstrum, V., Dann, W., Fleischer, R., Hundhausen, C., Korhonen, A., Malmi, L., McNally, M., Rodger, S., Velazquez-Iturbide J.A., Exploring the role of visualization and engagement in computer science education, ACM SIGCSE bulletin, 35, pp. 131-152, (2002); 
Nokes-Malach T.J., VanLehn K., Belenky D.M., Lichtenstein M., Cox G., Coordinating principles and examples through analogy and self-explanation, European Journal of Psychology of Education, 28, 4, pp. 1237-1263, (2013); 
Nunnally J.C., Psychometric Ttheory, (1978); 
Paas F.G.W.C., Van Merrienboer J.J.G., Variability of worked examples and transfer of geometrical problem-solving skills: A cognitive-load approach, Journal of educational psychology, 86, 1, pp. 122-133, (1994); 
Park J., Park Y.H., Kim J., Cha J., Kim S., Alice O.H., Elicast: Embedding interactive exercises in instructional programming screencasts, Proceedings of the 5Th Annual ACM Conference on Learning at Scale, 10, (2018); 
Parsons D., Haden P., Parson’s programming puzzles: A fun and effective learning tool for first programming courses, Proceedings of the 8Th Australasian Conference on Computing Education, 52, pp. 157-163, (2006); 
Pirolli P.L., Anderson J.R., The role of learning from examples in the acquisition of recursive programming skills, Canadian Journal of Psychology/Revue canadienne de psychologie, 39, 2, pp. 240-272, (1985); 
Reeve J., How students create motivationally supportive learning environments for themselves: The concept of agentic engagement, Journal of Educational Psychology, 105, 3, pp. 579-595, (2013); 
Reeve J., Tseng C.-M., Agency as a fourth aspect of students’ engagement during learning activities, Contemporary Educational Psychology, 36, 4, pp. 257-267, (2011); 
Renkl A., Learning from worked-out examples: A study on individual differences, Cognitive science, 21, 1, pp. 1-29, (1997); 
Renkl A., Atkinson R., An Example Order for Cognitive Skill Acquisition., (2007); 
Resnick M., Maloney J., Monroy-Hernandez A., Rusk N., Eastmond E., Brennan K., Millner A., Rosenbaum E., Silver J., Silverman B., Et al., Scratch: programming for all, Communications of the ACM, 52, 11, pp. 60-67, (2009); 
Rivers K., Automated data-driven hint generation for learning programming, (2017); 
Sajaniemi J., Kuittinen M., Program animation based on the roles of variables, Proceedings of the ACM Symposium on Software Visualization, pp. ff7-ff, (2003); 
Salden R.J.C.M., Aleven V., Schwonke R., Renkl A., The expertise reversal effect and worked examples in tutored problem solving, Instructional Science, 38, 3, pp. 289-307, (2010); 
Salden R.J.C.M., Koedinger K.R., Renkl A., Aleven V., McLaren B.M., Accounting for beneficial effects of worked examples in tutored problem solving, Educational Psychology Review, 22, 4, pp. 379-392, (2010); 
Sears A., Wolfe R., Visual analysis: Adding breadth to a computer graphics course, ACM SIGCSE Bulletin, 27, pp. 195-198, (1995); 
Sharrock R., Hamonic E., Hiron M., Carlier S., Codecast: An innovative technology to facilitate teaching and learning computer programming in a c language online course, Proceedings of the 4Th ACM Conference on Learning at Scale, pp. 147-148, (2017); 
Sirkia T., A javascript library for visualizing program execution, Proceedings of the 13Th Koli Calling International Conference on Computing Education Research, pp. 189-190, (2013); 
Skinner E.A., Kindermann T.A., Furrer C.J., A motivational perspective on engagement and disaffection: Conceptualization and assessment of children’s behavioral and emotional participation in academic activities in the classroom, Educational and Psychological Measurement, 69, 3, pp. 493-525, (2009); 
Sorva J., Karavirta V., Malmi L., A review of generic program visualization systems for introductory programming education, ACM Transactions on Computing Education (TOCE), 13, 4, pp. 15:1-15:64, (2013); 
Sweller J., Cooper G.A., The use of worked examples as a substitute for problem solving in learning algebra, Cognition and instruction, 2, 1, pp. 59-89, (1985); 
Sweller J., Van Merrienboer J.J.G., Paas F.G.W.C., Cognitive architecture and instructional design, Educational psychology review, 10, 3, pp. 251-296, (1998); 
Trafton J.G., Reiser B.J., The contributions of studying examples and solving problems to skill acquisition, Proceedings of the 15Th Annual Conference of the Cognitive Science Society, pp. 1017-1022, (1993); 
Walker C.O., Greene B.A., Mansell R.A., Identification with academics, intrinsic/extrinsic motivation, and self-efficacy as predictors of cognitive engagement, Learning and individual differences, 16, 1, pp. 1-12, (2006); 
Ward M., Sweller J., Structuring effective worked examples, Cognition and instruction, 7, 1, pp. 1-39, (1990); 
Weber G., Individual selection of examples in an intelligent learning environment, Journal of Interactive Learning Research, 7, 1, pp. 3-31, (1996); 
Weber G., Brusilovsky P., Elm-art: An adaptive versatile system for web-based instruction, International Journal of Artificial Intelligence in Education (IJAIED), 12, pp. 351-384, (2001); 
Weber G., Mollenberg A., Elm-pe: A knowledge-based programming environment for learning lisp, Proceedings of ED-MEDIA 1994, pp. 557-562, (1994); 
Yudelson M., Brusilovsky P., Zadorozhny V., A user modeling server for contemporary adaptive hypermedia: An evaluation of push approach to evidence propagation, 11Th International Conference on User Modeling, UM 2007, Vol. 4511 of Lecture Notes in Computer Science, pp. 27-36, (2007); 
Zhi R., Price T.W., Marwan S., Milliken A., Barnes T., Chi M., Exploring the impact of worked examples in a novice programming environment, Proceedings of the 50Th ACM Technical Symposium on Computer Science Education, SIGCSE ’19, pp. 98-104, (2019)#FRF#
