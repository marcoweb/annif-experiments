#ITI#Using multimodal learning analytics to understand effects of block-based and text-based modalities on computer programming#FTI#
#IRE# Background: With the development of computational literacy, there has been a surge in both research and practice application of text-based and block-based modalities within the field of computer programming education. Despite this trend, little work has actually examined how learners engaging in programming process when utilizing these two major programming modalities, especially in the context of secondary education settings. Objectives: To further compare programming effects between and within text-based and block-based modalities, this research conducted a quasi-experimental research in China's secondary school. Methods: An online programming platform, Code4all, was developed to allow learners to program in text-based and block-based modalities. This research collected multimodal data sources, including programming platform data, process data, and performance data. This research further utilized multiple learning analytics approaches (i.e., clustering analysis, click stream analysis, lag-sequential analysis and statistics) to compare learners' programming features, behavioural patterns and knowledge gains under two modalities. Results and Conclusions: The results indicated that learners in text-based modality tended to write longer lines of code, encountered more syntactical errors, and took longer to attempt debugging. In contrast, learners in block-based modality spent more time operating blocks and attempt debugging, achieving better programming knowledge performances compared to their counterparts. Further analysis of five clusters from the two modalities revealed discrepancies in programming behavioural patterns. Implications: Three major pedagogical implications were proposed based on empirical research results. Furthermore, this research contributed to the learning analytics literature by integrating process-oriented and summative analysis to reveal learners' programming learning quality#FRE#
#IPC# block-based programming; computer programming; multimodal learning analytics; secondary education; text-based programming#FPC#
#IRF# Alshaigy B., Kamal S., Mitchell F., Martin C., Aldea A., Pilet: An interactive learning tool to teach python, Proceedings of the Workshop in Primary and Secondary Computing Education, pp. 76-79, (2015); 
Armoni M., Meerbaum-Salant O., Ben-Ari M., From Scratch to “real” programming, ACM Transactions on Computing Education, 14, 25, pp. 1-15, (2015); 
Bau D., Gray J., Kelleher C., Sheldon J., Turbak F., Learnable programming: Blocks and beyond, Communications of the ACM, 60, pp. 72-80, (2017); 
Bey A., Perez-Sanagustin M., Broisin J., Unsupervised automatic detection of learners' programming behavior, Proceedings of the European Conference on Technology Enhanced Learning, pp. 69-82, (2019); 
Brennan K., Resnick M., New frameworks for studying and assessing the development of computational thinking, Proceedings of the 2012 Annual Meeting of the American Educational Research Association, pp. 1-25, (2012); 
Byrne P., Lyons G., The effect of student attributes on success in programming, ACM SIGCSE Bulletin, 33, 3, pp. 49-52, (2001); 
Chen B., Resendes M., Chai C.S., Hong H., Two tales of time: Uncovering the significance of sequential patterns among contribution types in knowledge building discourse, Interactive Learning Environments, 25, 2, pp. 162-175, (2017); 
Chevalier M., Giang C., Piatti A., Mondada F., Fostering computational thinking through educational robotics: A model for creative computational problem solving, International Journal of STEM Education, 7, 1, pp. 1-18, (2020); 
Cinar M., Tuzun H., Comparison of object-oriented and robot programming activities: The effects of programming modality on student achievement, abstraction, problem solving, and motivation, Journal of Computer Assisted Learning, 37, 2, pp. 370-386, (2021); 
Dijkstra E., How do we tell truths that might hurt?, ACM SIGPLAN Notices, 17, 5, pp. 13-15, (1982); 
Duncan C., Bell T., Tanimoto S., Should your 8-year-old learn coding?, Proceedings of the 9th Workshop in Primary and Secondary Computing Education, pp. 60-69, (2014); 
Dutt A., Aghabozrgi S., Ismail M.A.B., Mahroeian H., Clustering algorithms applied in educational data mining, International Journal of Information and Electronics Engineering, 5, 2, (2015); 
Eid C., Millham R., Which introductory programming approach is most suitable for students: Procedural or visual programming?, American Journal of Business Education, 5, 2, pp. 173-178, (2012); 
Emerson A., Cloude E.B., Azevedo R., Lester J., Multimodal learning analytics for game-based learning, British Journal of Educational Technology, 51, 5, pp. 1505-1526, (2020); 
Falloon G., An analysis of young students' thinking when completing basic coding tasks using Scratch Jnr. on the iPad, Journal of Computer Assisted Learning, 32, 6, pp. 576-593, (2016); 
Filva D.A., Forment M.A., Garcia-Penalvo F.J., Escudero D.F., Casan M.J., Clickstream for learning analytics to assess students' behavior with scratch, Future Generation Computer Systems, 93, pp. 673-686, (2019); 
Grover S., Basu S., Measuring student learning in introductory block-based programming: Examining misconceptions of loops, variables, and boolean logic, Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education, pp. 267-272, (2017); 
Programming Language Rankings in June 2021, (2021); 
Ivanovic M., Xinogalos S., Pitner T., Savic M., Technology enhanced learning in programming courses – International perspective, Education and Information Technologies, 22, 6, pp. 2981-3003, (2017); 
Kolling M., Brown N., Altadmri A., Frame-based editing: Easing the transition from blocks to text-based programming, Proceedings of the Workshop in Primary and Secondary Computing Education, pp. 29-38, (2015); 
Lee V.C.S., Yu Y.T., Tang C.M., Wong T.L., Poon C.K., ViDA: A virtual debugging advisor for supporting learning in computer programming courses, Journal of Computer Assisted Learning, 34, 3, pp. 243-258, (2018); 
MacQueen J., Some methods for classification and analysis of multivariate observations, Proceedings of the fifth Berkeley Symposium on Mathematical Statistics and Probability, pp. 281-297, (1967); 
Malliarakis C., Satratzemi M., Xinogalos S., CMX: The effects of an educational MMORPG on learning and teaching computer programming, IEEE Transactions on Learning Technologies, 10, 2, pp. 219-235, (2017); 
General high school information technology curriculum standard (2017 Edition). Ministry of Education of the People's Republic of China website, (2017); 
Mladenovic M., Boljat I., Zanko Z., Comparing loops misconceptions in block-based and text-based programming languages at the K-12 level, Education and Information Technologies, 23, 4, pp. 1483-1500, (2018); 
Nolan K., Bergin S., The role of anxiety when learning to program: A systematic review of the literature, Proceedings of the 16th Koli Calling International Conference on Computing Education Research, pp. 61-70, (2016); 
Noone M., Mooney A., Visual and textual programming languages: A systematic review of the literature, Journal of Computers in Education, 5, 2, pp. 149-174, (2018); 
Ochoa X., Chapter 11: Multimodal learning analytics, Handbook of learning analytics, pp. 143-150, (2017); 
Pereira F.D., Oliveira E.H.T., Oliveira D.B.F., Cristea A.I., Carvalho L.S.G., Fonseca S.C., Toda A., Isotani S., Using learning analytics in the Amazonas: Understanding students' behaviour in introductory programming, British Journal of Educational Technology, 51, 4, pp. 955-972, (2020); 
Price T.W., Barnes T., Comparing textual and block interfaces in a novice programming environment, Proceedings of the Eleventh Annual International Conference on International Computing Education Research, pp. 91-99, (2015); 
Priyaadharshini M., Natha Mayil N., Dakshina R., Sandhya S., Bettina Shirley R., Learning analytics: Game-based learning for programming course in higher education, Procedia Computer Science, 172, pp. 468-472, (2020); 
Rousseeuw P.J., Silhouettes: A graphical aid to the interpretation and validation of cluster analysis, Journal of Computational and Applied Mathematics, 20, pp. 53-65, (1987); 
Sawyer R.K., The Cambridge handbook of the learning sciences, Curriculum Inquiry, 38, 3, pp. 473-476, (2014); 
Sayginer S., Tuzun H., The effects of block-based visual and text-based programming training on students' achievement, logical thinking skills, and motivation, Journal of Computer Assisted Learning, 39, 2, pp. 1-15, (2022); 
Scherer R., Siddiq F., Sanchez Viveros B., A meta-analysis of teaching and learning computer programming: Effective instructional approaches and conditions, Computers in Human Behavior, 109, (2020); 
Shi L., Cristea A.I., In-depth exploration of engagement patterns in MOOCs, Proceedings of the 19th International Conference on Web Information Systems Engineering, pp. 395-409, (2018); 
Shi L., Cristea A.I., Toda A.M., Oliveira W., Revealing the hidden patterns: A comparative study on profiling subpopulations of MOOC students, Proceedings of the 28th International Conference on Information Systems Development, (2019); 
Sun L., Hu L., Zhou D., Which way of design programming activities is more effective to promote K-12 students' computational thinking skills? A meta-analysis, Journal of Computer Assisted Learning, 37, 4, pp. 1048-1062, (2021); 
Three contrasting Pairs' collaborative programming processes in China's secondary education, Journal of Educational Computing Research, 59, 4, (2021); 
Comparing learners' knowledge, behaviors, and attitudes between two instructional modes of computer programming in secondary education, International Journal of STEM Education, 8, 1, (2021); 
Taub R., Armoni M., Ben-Ari M., CS unplugged and middle-school students' views, attitudes, and intentions regarding CS, ACM Transactions on Computing Education, 12, 2, pp. 1-29, (2012); 
Tempel M., Blocks programming, (2013); 
Wagh A., Cook-Whitt K., Wilensky U., Bridging inquiry-based science and constructionism: Exploring the alignment between students tinkering with code of computational models and goals of inquiry, Journal of Research in Science Teaching, 54, 5, pp. 615-641, (2017); 
Weintrop D., Comparing text-based, blocks-based, and hybrid blocks/text programming tools, Proceedings of the Eleventh Annual International Conference on International Computing Education Research, pp. 283-284, (2015); 
Weintrop D., Wilensky U., To block or not to block, that is the question: Students' perceptions of blocks-based programming, Proceedings of the 14th International Conference on Interaction Design and Children, pp. 199-208, (2015); 
Weintrop D., Wilensky U., Comparing block-based and text-based programming in high school computer science classrooms, ACM Transactions on Computing Education, 18, 1, pp. 1-25, (2017); 
Weintrop D., Wilensky U., Transitioning from introductory block-based and text-based environments to professional programming languages in high school computer science classrooms, Computers & Education, 142, pp. 1-17, (2019); 
Wing J., Computational thinking benefits society. Social issues in computing website, (2014); 
Wu B., Hu Y., Ruis A.R., Wang M., Analysing computational thinking in collaborative programming: A quantitative ethnography approach, Journal of Computer Assisted Learning, 35, 3, pp. 421-434, (2019); 
Yucer Y., Rizvanoglu K., Battling gender stereotypes: A user study of a code-learning game, “Code combat,” with middle school children, Computers in Human Behavior, 99, pp. 352-365, (2019); 
Zhong B., Si Q., Troubleshooting to learn via scaffolds: Effect on students' ability and cognitive load in a robotics course, Journal of Educational Computing Research, 59, 1, pp. 95-118, (2021); 
The impact of social factors on pair programming in a primary school, Computers in Human Behavior, 64, (2016)#FRF#
