#ITI#Scratch and unity design in elementary education: A study in initial teacher training#FTI#
#IRE# Background: The present study analyses the design of programming literacy in the sixth grade of Primary Education, starting from the use of simple activities with visual block-based programming, through Scratch, and progressively linking difficulty to the use of the Unity engine, and the C# language, with simple activities identical to those created in Scratch. Objectives: This research aims to evaluate future teachers' abilities and attitudes regarding programming and its educational possibilities. We intend to evaluate the viability of a teaching proposal that combines a visual block-based programming environment and a more advanced one, based on C#. Method: In the settings of two public Spanish universities, we analyse the possibilities in the training of future teachers who are studying for a degree in Primary Education Teaching and a degree in Pedagogy. Based on a test and three scales, descriptive data and statistical inference are detailed through a quasi-experimental design with a Student's t-test in the first dimension, and a Wilcoxon test in the second dimension. Results: The participants improved their performance and attitudes towards programming with the intervention of the study in the use of coding. Conclusions: It can be concluded that coding is essential in teacher training, and that a greater presence of programming training in higher education is essential. The benefits are visible in the pedagogical approach of coding related to creativity, innovation, motivation, an active approach and interest, highlighting the fact that the implementation of visual block-based programming by blocks and engines is feasible in Elementary Education. The training proposal—provided by appropriate progression, selection, and sequencing of content—fosters basic and practical teacher training, and this can be defined as an apt training solution#FRE#
#IPC# educational technology; elementary education; higher education; programming; teaching and learning strategies#FPC#
#IRF# Adams Becker S., Freeman A., Giesinger Hall C., Cummins M., Yuhnke B., NMC/CoSN horizon report: 2016 K-12 edition, (2016); 
Brennan K., Resnick M., Using artifact-based interviews to study the development of computational thinking in interactive media design, (2012); 
Clark J., Rogers M.P., Spradling C., Pais J., What, no canoes? Lessons learned while hosting a scratch summer camp, Journal of Computing Sciences in Colleges, 28, pp. 204-210, (2013); 
Cohen J., Statistical power analysis for the behavioral sciences, (1988); 
Cohen L., Manion L., Morrison K., Research methods in education, (2000); 
Comber O., Motschnig R., Mayer H., Haselberger D., Engaging students in computer science education through game development with unity, 2019 IEEE global engineering education conference (EDUCON), pp. 199-205, (2019); 
Dickson P.E., Using unity to teach game development: When you've never written a game, Proceedings of the 2015 ACM conference on innovation and technology in computer science education ITiCSE ‘15, pp. 75-80, (2015); 
Goetz J.P., LeCompte M.D., Ethnography and qualitative design in educational research. Evaluation of the ethnographic design, (1984); 
Hair J.F., Anderson R.E., Tatham R.L., Black W.C., Multivariate data analysis, (1998); 
Holenko Dlab M., Hoic-Bozic N., Effectiveness of game development-based learning for acquiring programming skills in lower secondary education in Croatia, Education and Information Technologies, 26, 4, pp. 4433-4456, (2021); 
Israel-Fishelson R., Hershkovitz A., Persistence in a game-based learning environment: The case of elementary school students learning computational thinking, Journal of Educational Computing Research, 58, 5, pp. 891-918, (2020); 
Kessler R., van Langeveld M., Altizer R., Entertainment arts and engineering (or how to fasttrack a new interdisciplinary program), Proceedings of the 40th ACM Technical Symposium on Computer Science Education (SIGCSE ‘09), pp. 539-543, (2009); 
Kolodner J., Camp P., Crismond D., Fasse B., Gray J., Holbrook J., Puntambekar S., Ryan M., Problem-based learning meets case-based reasoning in the middle-school science classroom: Putting learning by design into practice, Journal of the Learning Sciences, 12, 4, pp. 495-547, (2003); 
Kroustalli C., Xinogalos S., Studying the effects of teaching programming to lower secondary school students with a serious game: A case study with Python and CodeCombat, Education and Information Technologies, 26, 5, pp. 6069-6095, (2021); 
Kwon D.Y., Kim H.S., Shim J.K., Lee W.G., Algorithmic bricks: A tangible robot programming tool for elementary school students education, IEEE Transactions, 55, 4, pp. 474-479, (2012); 
Lambert L., Guiffre H., Computer science outreach in an elementary school, Journal of Computing Sciences in Colleges, 24, 3, pp. 118-124, (2009); 
Lin J.M.C., Yen L.Y., Yang M.C., Chen C.F., Teaching computer programming in elementary schools: A pilot study, (2005); 
Linhoff J., Settle A., Teaching game programming using XNA, Proceedings of the 13th Annual Conference on Innovation and Technology in Computer Science Education (ITiCSE ‘08), pp. 250-254, (2008); 
Malliarakis C., Satratzemi M., Xinogalos S., CMX: The effects of an educational MMORPG on learning and teaching computer programming, IEEE Transactions on Learning Technologies, 10, 2, pp. 219-235, (2017); 
Maloney J., Kafai Y., Resnick M., Rusk N., Programming by choice: Urban youth learning programming with scratch, 39th SIGCSE Technical Symposium on Computer Science Education, pp. 367-371, (2008); 
Maya I., Pearson J.N., Tapia T., Wherfel Q.M., Reese G., Supporting all learners in school-wide computational thinking: A cross-case qualitative analysis, Computers & Education, 82, pp. 263-279, (2015); 
Papert S., Mindstorms: Children, computers, and powerful ideas, (1980); 
Resnick M., Maloney J., Hernandez A.M., Rusk N., Eastmond E., Brennan K., Millner A., Rosenbaum E., Silver J., Silverman B., Kafai Y., Scratch: Programming for all, Communications of the ACM, 52, 11, pp. 60-67, (2009); 
Revista Complutense de Educación, 28, 2017; 
Multimodal Technologies Interact, 4, 2020; 
Computers and Education, 97, 2016; 
Scientia Paedagogica Experimentalis, 59, 2022; 
Sonmez D., Lee H., Problem-based learning in science, (2003); 
Villareale J., Biemer F., Seif El-Nasr M., Zhu J., Reflection in game-based learning: A survey of programming games, International Conference on the Foundations of Digital Games, pp. 1-9, (2020); 
Zyda M., Computer science in the conceptual age, Communications of the ACM, 52, 12, pp. 66-72, (2009)#FRF#
